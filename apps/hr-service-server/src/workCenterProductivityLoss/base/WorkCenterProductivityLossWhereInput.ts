/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { EnumWorkCenterProductivityLossLossType } from "./EnumWorkCenterProductivityLossLossType";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { WorkCenterWhereUniqueInput } from "../../workCenter/base/WorkCenterWhereUniqueInput";
import { WorkCenterProductivityLossTypeWhereUniqueInput } from "../../workCenterProductivityLossType/base/WorkCenterProductivityLossTypeWhereUniqueInput";

@InputType()
class WorkCenterProductivityLossWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isActive?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isManual?: BooleanFilter;

  @ApiProperty({
    required: false,
    enum: EnumWorkCenterProductivityLossLossType,
  })
  @IsEnum(EnumWorkCenterProductivityLossLossType)
  @IsOptional()
  @Field(() => EnumWorkCenterProductivityLossLossType, {
    nullable: true,
  })
  lossType?: "Availability" | "Perfomance" | "Quality" | "Productive";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  normalizedName?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  note?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  sequence?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterWhereUniqueInput)
  @IsOptional()
  @Field(() => WorkCenterWhereUniqueInput, {
    nullable: true,
  })
  workCenterId?: WorkCenterWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterProductivityLossTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityLossTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => WorkCenterProductivityLossTypeWhereUniqueInput, {
    nullable: true,
  })
  workCenterProductivityLossTypeI?: WorkCenterProductivityLossTypeWhereUniqueInput;
}

export { WorkCenterProductivityLossWhereInput as WorkCenterProductivityLossWhereInput };
