datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Attribute {
  attributeValues AttributeValue[]
  code            String?
  createdAt       DateTime         @default(now())
  description     String?
  id              Int              @id @default(autoincrement())
  name            String           @unique
  normalizedName  String           @unique
  note            String?
  updatedAt       DateTime         @updatedAt
}

model AttributeValue {
  attributeId     Attribute        @relation(fields: [attributeIdId], references: [id])
  attributeIdId   Int
  createdAt       DateTime         @default(now())
  id              String           @id @default(cuid())
  note            String?
  productVariants ProductVariant[]
  updatedAt       DateTime         @updatedAt
  value           String
}

model BarcodeType {
  code            String?
  createdAt       DateTime         @default(now())
  description     String?
  id              Int              @id @default(autoincrement())
  name            String           @unique
  normalizedName  String           @unique
  note            String?
  productBarcodes ProductBarcode[]
  updatedAt       DateTime         @updatedAt
}

model BillOfMaterialType {
  billOfMaterials BillOfMaterial[]
  code            String?
  createdAt       DateTime         @default(now())
  description     String?
  id              Int              @id @default(autoincrement())
  name            String           @unique
  normalizedName  String           @unique
  note            String?
  updatedAt       DateTime         @updatedAt
}

model PrintTemplateGroup {
  code           String?
  createdAt      DateTime @default(now())
  description    String?
  id             Int      @id @default(autoincrement())
  name           String   @unique
  normalizedName String   @unique
  note           String?
  updatedAt      DateTime @updatedAt
}

model PrintTemplate {
  code                    String?
  createdAt               DateTime                      @default(now())
  description             String?
  filePath                String?
  id                      String                        @id @default(cuid())
  isCustomized            Boolean                       @default(0)
  isFavourite             Boolean                       @default(0)
  name                    String                        @unique
  normalizedName          String                        @unique
  note                    String?
  paperLayout             EnumPrintTemplatePaperLayout?
  paperSize               EnumPrintTemplatePaperSize?
  previewImage            Json?
  printTemplateContents   PrintTemplateContent?         @relation(fields: [printTemplateContentsId], references: [id])
  printTemplateContentsId String?                       @unique
  updatedAt               DateTime                      @updatedAt
}

model PrintTemplateContent {
  createdAt     DateTime       @default(now())
  display       String?
  fieldValue    String
  id            String         @id @default(cuid())
  key           String         @unique
  note          String?
  printTemplate PrintTemplate?
  updatedAt     DateTime       @updatedAt
  value         String
}

model Customer {
  DefaultSalePriceTypeId Float?
  address                String?
  code                   String?
  createdAt              DateTime          @default(now())
  credit                 Decimal?
  currency               Currency?         @relation(fields: [currencyId], references: [id])
  currencyId             String?
  debit                  Decimal?
  description            String?
  email                  String?
  firstBalance           Decimal?
  firstBalanceDate       DateTime?
  id                     String            @id @default(cuid())
  isActive               Boolean?          @default(0)
  isSystem               Boolean?          @default(0)
  isUnderRevision        Boolean?          @default(0)
  maxAllowedDebit        Decimal?
  name                   String            @unique
  normalizedName         String            @unique
  phoneNumber            String?
  previousBalance        Decimal?
  productionOrders       ProductionOrder[]
  revisionDate           DateTime?
  saleDiscountRate       Decimal?
  supplierId             String?
  taxNumber              String?
  updatedAt              DateTime          @updatedAt
  website                String?
}

model SalePriceType {
  code           String?
  createdAt      DateTime @default(now())
  description    String?
  id             Int      @id @default(autoincrement())
  name           String   @unique
  normalizedName String   @unique
  note           String?
  updatedAt      DateTime @updatedAt
}

model Currency {
  code           String?
  createdAt      DateTime   @default(now())
  customers      Customer[]
  description    String?
  id             String     @id @default(cuid())
  name           String     @unique
  normalizedName String     @unique
  note           String?
  updatedAt      DateTime   @updatedAt
}

model OrderStatus {
  code             String?
  createdAt        DateTime         @default(now())
  description      String?
  id               Int              @id @default(autoincrement())
  name             String           @unique
  normalizedName   String           @unique
  note             String?
  productionOrders ProductionOrder?
  updatedAt        DateTime         @updatedAt
}

model Store {
  addressLine1     String?
  allowSale        Boolean           @default(1)
  cellPhoneNumber  String?
  code             String?
  createdAt        DateTime          @default(now())
  fax              String?
  homePhoneNumber  String?
  id               String            @id @default(cuid())
  name             String            @unique
  normalizedName   String            @unique
  note             String?
  productionOrders ProductionOrder[]
  products         Product[]
  street           String?
  updatedAt        DateTime          @updatedAt

  @@@default(0)
}

model Unit {
  billOfMaterialDetails BillOfMaterialDetail[]
  billOfMaterials       BillOfMaterial[]
  code                  String?
  createdAt             DateTime               @default(now())
  description           String?
  id                    String                 @id @default(cuid())
  isCompound            Boolean?
  isDefault             Boolean?               @default(0)
  name                  String                 @unique
  normalizedName        String                 @unique
  note                  String?
  productionOrders      ProductionOrder[]
  products              Product[]
  updatedAt             DateTime               @updatedAt
}

model WorkCenter {
  analyticDistribution String?
  code                 String?
  color                Int?
  costPerHour          Decimal?
  createdAt            DateTime            @default(now())
  defaultCapacity      Decimal?
  id                   Int                 @id @default(autoincrement())
  isActive             Boolean             @default(0)
  isProductive         Boolean             @default(0)
  name                 String              @unique
  normalizedName       String              @unique
  note                 String?
  oeeTareget           Decimal?
  sequence             Int?
  startTime            Decimal?
  stopTime             Decimal?
  timeEfficiency       Decimal?
  updatedAt            DateTime            @updatedAt
  workCenterRoutings   WorkCenterRouting[]
}

model WorkCenterRouting {
  billOfMaterialDetails BillOfMaterialDetail[]
  code                  String?
  createdAt             DateTime               @default(now())
  id                    String                 @id @default(cuid())
  isActive              Boolean
  name                  String
  normalizedName        String                 @unique
  note                  String?
  sequence              Int?
  timeCycleManual       Decimal?
  timeModeBatch         Int?
  updatedAt             DateTime               @updatedAt
  workCenter            WorkCenter?            @relation(fields: [workCenterId], references: [id])
  workCenterId          Int?
}

model Product {
  barcode                              String?
  billOfMaterialDetails                BillOfMaterialDetail[]
  billOfMaterials                      BillOfMaterial[]
  canExpire                            Boolean                @default(0)
  code                                 String?
  costPrice                            Decimal
  costPriceIncludesTax                 Boolean?               @default(1)
  createdAt                            DateTime               @default(now())
  currentStockQuantity                 Decimal
  daysToManufacture                    Int?
  defaultStoreId                       Store?                 @relation(fields: [defaultStoreIdId], references: [id])
  defaultStoreIdId                     String?
  defaultUnitId                        Unit                   @relation(fields: [defaultUnitIdId], references: [id])
  defaultUnitIdId                      String
  description                          String?
  discontinuedDate                     DateTime?
  discountRate                         Decimal?
  expireAlarmInDays                    Int?
  expireIsDefaultAfterDaysFromPurchase Int?
  firstStockQuantity                   Decimal?
  id                                   String                 @id @default(cuid())
  isActive                             Boolean                @default(1)
  isCompound                           Boolean?               @default(0)
  isFavorite                           Boolean                @default(0)
  maintainInventory                    Boolean                @default(1)
  minimumSalePrice                     Decimal?
  name                                 String                 @unique
  normalizedName                       String                 @unique
  note                                 String?
  photo                                Json?
  productBarcodes                      ProductBarcode[]
  productCategoryId                    ProductCategory?       @relation(fields: [productCategoryIdId], references: [id])
  productCategoryIdId                  String?
  productDepartmentId                  ProductDepartment?     @relation(fields: [productDepartmentIdId], references: [id])
  productDepartmentIdId                Int?
  productGroupId                       ProductGroup?          @relation(fields: [productGroupIdId], references: [id])
  productGroupIdId                     String?
  productTypeId                        ProductType            @relation(fields: [productTypeIdId], references: [id])
  productTypeIdId                      Int
  productVariants                      ProductVariant[]
  productionOrders                     ProductionOrder[]
  profitRate                           Decimal?
  reorderQuantity                      Decimal?
  salePrice                            Decimal
  salePriceIncludesTax                 Boolean                @default(1)
  saleTaxId                            SaleTax?               @relation(fields: [saleTaxIdId], references: [id])
  saleTaxIdId                          String?
  updatedAt                            DateTime               @updatedAt
}

model ProductType {
  code           String?
  createdAt      DateTime  @default(now())
  id             Int       @id @default(autoincrement())
  isComponent    Boolean?  @default(0)
  name           String    @unique
  normalizedName String    @unique
  note           String?
  products       Product[]
  updatedAt      DateTime  @updatedAt
}

model ProductDepartment {
  code                      String?
  createdAt                 DateTime            @default(now())
  description               String?
  id                        Int                 @id @default(autoincrement())
  isDefault                 Boolean             @default(0)
  name                      String              @unique
  normalizedName            String              @unique
  note                      String?
  parentProductDepartment   ProductDepartment?  @relation(name: "parentProductDepartment", fields: [parentProductDepartmentId], references: [id])
  parentProductDepartmentId Int?
  productDepartments        ProductDepartment[] @relation(name: "parentProductDepartment")
  products                  Product[]
  updatedAt                 DateTime            @updatedAt
}

model ProductGroup {
  code                        String?
  costOfGoodsSoldAccount      Account?       @relation(name: "costOfGoodsSoldAccount", fields: [costOfGoodsSoldAccountId], references: [id])
  costOfGoodsSoldAccountId    String?
  createdAt                   DateTime       @default(now())
  description                 String?
  excludeFromPurchase         Boolean        @default(0)
  excludeFromSale             Boolean        @default(0)
  id                          String         @id @default(cuid())
  inventoryAccount            Account?       @relation(name: "inventoryAccount", fields: [inventoryAccountId], references: [id])
  inventoryAccountId          String?
  isDefault                   Boolean        @default(0)
  name                        String         @unique
  normalizedName              String         @unique
  note                        String?
  parentProductGroupId        ProductGroup?  @relation(name: "parentProductGroupId", fields: [parentProductGroupIdId], references: [id])
  parentProductGroupIdId      String?
  productGroups               ProductGroup[] @relation(name: "parentProductGroupId")
  products                    Product[]
  purchaseAccountId           Account?       @relation(name: "purchaseAccountId", fields: [purchaseAccountIdId], references: [id])
  purchaseAccountIdId         String?
  purchaseDiscountAccountId   Account?       @relation(name: "purchaseDiscountAccountId", fields: [purchaseDiscountAccountIdId], references: [id])
  purchaseDiscountAccountIdId String?
  purchaseReturnAccountId     Account?       @relation(name: "purchaseReturnAccountId", fields: [purchaseReturnAccountIdId], references: [id])
  purchaseReturnAccountIdId   String?
  saleAccountId               Account?       @relation(name: "aleAccountProductGroups", fields: [saleAccountIdId], references: [id])
  saleAccountIdId             String?
  saleDiscountAccountId       Account?       @relation(name: "saleDiscountAccountId", fields: [saleDiscountAccountIdId], references: [id])
  saleDiscountAccountIdId     String?
  saleReturnAccountId         Account?       @relation(name: "SaleReturnAccountProductGroups", fields: [saleReturnAccountIdId], references: [id])
  saleReturnAccountIdId       String?
  saleTaxId                   SaleTax?       @relation(fields: [saleTaxIdId], references: [id])
  saleTaxIdId                 String?
  updatedAt                   DateTime       @updatedAt
}

model Account {
  SaleReturnAccountProductGroups       ProductGroup[] @relation(name: "SaleReturnAccountProductGroups")
  accountNumber                        String         @unique
  aleAccountProductGroups              ProductGroup[] @relation(name: "aleAccountProductGroups")
  costOfGoodsSoldAccountProductGroups  ProductGroup[] @relation(name: "costOfGoodsSoldAccount")
  createdAt                            DateTime       @default(now())
  description                          String?
  id                                   String         @id @default(cuid())
  inventoryAccountProductGroups        ProductGroup[] @relation(name: "inventoryAccount")
  isMasterAccount                      Boolean?       @default(0)
  name                                 String         @unique
  normalizedName                       String         @unique
  note                                 String?
  parentAccountId                      Account?       @relation(name: "parentAccountId", fields: [parentAccountIdId], references: [id])
  parentAccountIdId                    String?
  parentAccounts                       Account[]      @relation(name: "parentAccountId")
  purchaseAccountProductGroups         ProductGroup[] @relation(name: "purchaseAccountId")
  purchaseDiscountAccountProductGroups ProductGroup[] @relation(name: "purchaseDiscountAccountId")
  purchaseReturnAccountProductGroups   ProductGroup[] @relation(name: "purchaseReturnAccountId")
  saleDiscountAccountProductGroups     ProductGroup[] @relation(name: "saleDiscountAccountId")
  updatedAt                            DateTime       @updatedAt
}

model SaleTax {
  code           String?
  createdAt      DateTime       @default(now())
  description    String?
  id             String         @id @default(cuid())
  name           String         @unique
  normalizedName String         @unique
  note           String?
  productGroups  ProductGroup[]
  products       Product[]
  updatedAt      DateTime       @updatedAt
}

model ProductCategory {
  code           String?
  createdAt      DateTime  @default(now())
  description    String?
  id             String    @id @default(cuid())
  isDefault      Boolean   @default(0)
  name           String    @unique
  normalizedName String
  note           String?
  products       Product[]
  updatedAt      DateTime  @updatedAt
}

model ProductVariant {
  attributeValueId      AttributeValue         @relation(fields: [attributeValueIdId], references: [id])
  attributeValueIdId    String
  billOfMaterialDetails BillOfMaterialDetail[]
  billOfMaterials       BillOfMaterial[]
  createdAt             DateTime               @default(now())
  id                    String                 @id @default(cuid())
  note                  String?
  productBarcodes       ProductBarcode[]
  productId             Product                @relation(fields: [productIdId], references: [id])
  productIdId           String
  updatedAt             DateTime               @updatedAt
}

model ProductionDocument {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  isActive  Boolean  @default(1)
  note      String?
  priority  String?
  updatedAt DateTime @updatedAt
}

model BillOfMaterial {
  billOfMaterialDetails           BillOfMaterialDetail[]
  billOfMaterialTypeId            BillOfMaterialType     @relation(fields: [billOfMaterialTypeIdId], references: [id])
  billOfMaterialTypeIdId          Int
  code                            String
  createdAt                       DateTime               @default(now())
  daysToPrepareManufacturingOrder Int                    @default(1)
  endDate                         DateTime?
  id                              String                 @id @default(cuid())
  isActive                        Boolean?               @default(1)
  note                            String?
  productId                       Product                @relation(fields: [productIdId], references: [id])
  productIdId                     String
  productVariantId                ProductVariant?        @relation(fields: [productVariantIdId], references: [id])
  productVariantIdId              String?
  productionOrders                ProductionOrder[]
  quantity                        Decimal?
  sequence                        Int?
  startDate                       DateTime?
  unitId                          Unit                   @relation(fields: [unitIdId], references: [id])
  unitIdId                        String
  updatedAt                       DateTime               @updatedAt
}

model BillOfMaterialDetail {
  billOfMaterial        BillOfMaterial     @relation(fields: [billOfMaterialId], references: [id])
  billOfMaterialId      String
  costShare             Decimal?
  createdAt             DateTime           @default(now())
  id                    String             @id @default(cuid())
  isActive              Boolean            @default(1)
  isManualConsumption   Boolean?
  note                  String?
  productId             Product            @relation(fields: [productIdId], references: [id])
  productIdId           String
  productVariantId      ProductVariant?    @relation(fields: [productVariantIdId], references: [id])
  productVariantIdId    String?
  quantity              Decimal?
  sequence              Int?
  unitId                Unit               @relation(fields: [unitIdId], references: [id])
  unitIdId              String
  updatedAt             DateTime           @updatedAt
  workCenterRoutingId   WorkCenterRouting? @relation(fields: [workCenterRoutingIdId], references: [id])
  workCenterRoutingIdId String?
}

model ProductBarcode {
  barcode            String
  barcodeTypeId      BarcodeType?    @relation(fields: [barcodeTypeIdId], references: [id])
  barcodeTypeIdId    Int?
  createdAt          DateTime        @default(now())
  id                 String          @id @default(cuid())
  note               String?
  productId          Product         @relation(fields: [productIdId], references: [id])
  productIdId        String
  productVariantId   ProductVariant? @relation(fields: [productVariantIdId], references: [id])
  productVariantIdId String?
  updatedAt          DateTime        @updatedAt
}

model ProductionOrder {
  billOfMaterialId   BillOfMaterial? @relation(fields: [billOfMaterialIdId], references: [id])
  billOfMaterialIdId String?
  code               String?
  createdAt          DateTime        @default(now())
  customerId         Customer?       @relation(fields: [customerIdId], references: [id])
  customerIdId       String?
  deadlineDate       DateTime?
  description        String?
  finishDate         DateTime?
  id                 String          @id @default(cuid())
  name               String          @unique
  normalizedName     String          @unique
  note               String?
  orderDate          DateTime?
  orderStatusId      OrderStatus     @relation(fields: [Name], references: [id])
  Name               Int             @unique
  productId          Product         @relation(fields: [productIdId], references: [id])
  productIdId        String
  productQuantity    Decimal?
  sequenceNumber     String?
  startDate          DateTime?
  storeId            Store           @relation(fields: [storeIdId], references: [id])
  storeIdId          String
  unit               Unit            @relation(fields: [unitId], references: [id])
  unitId             String
  updatedAt          DateTime        @updatedAt
}

model ProductionAvailability {
  code           String?
  createdAt      DateTime @default(now())
  id             Int      @id @default(autoincrement())
  name           String   @unique
  normalizedName String   @unique
  note           String?
  updatedAt      DateTime @updatedAt
}

enum EnumPrintTemplatePaperLayout {
  Portrait
  Landscape
}

enum EnumPrintTemplatePaperSize {
  A1
  A2
  A3
  A4
  A5
  A6
  B1
  B2
  B3
  B5
  B6
}
