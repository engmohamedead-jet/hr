/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttendanceListRelationFilter } from "../../attendance/base/AttendanceListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { DecimalNullableFilter } from "../../util/DecimalNullableFilter";
import { BonusRequestListRelationFilter } from "../../bonusRequest/base/BonusRequestListRelationFilter";
import { CheckInOutListRelationFilter } from "../../checkInOut/base/CheckInOutListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DailyMovementRequestListRelationFilter } from "../../dailyMovementRequest/base/DailyMovementRequestListRelationFilter";
import { DayOffRequestListRelationFilter } from "../../dayOffRequest/base/DayOffRequestListRelationFilter";
import { EmployeeDepartmentWhereUniqueInput } from "../../employeeDepartment/base/EmployeeDepartmentWhereUniqueInput";
import { EmployeeGroupWhereUniqueInput } from "../../employeeGroup/base/EmployeeGroupWhereUniqueInput";
import { EmployeeRoleWhereUniqueInput } from "../../employeeRole/base/EmployeeRoleWhereUniqueInput";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { JobTitleWhereUniqueInput } from "../../jobTitle/base/JobTitleWhereUniqueInput";
import { LeaveRequestListRelationFilter } from "../../leaveRequest/base/LeaveRequestListRelationFilter";
import { OverNightRequestListRelationFilter } from "../../overNightRequest/base/OverNightRequestListRelationFilter";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class EmployeeWhereInput {
  @ApiProperty({
    required: false,
    type: () => AttendanceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AttendanceListRelationFilter)
  @IsOptional()
  @Field(() => AttendanceListRelationFilter, {
    nullable: true,
  })
  attendances?: AttendanceListRelationFilter;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  balance?: DecimalNullableFilter;

  @ApiProperty({
    required: false,
    type: () => BonusRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BonusRequestListRelationFilter)
  @IsOptional()
  @Field(() => BonusRequestListRelationFilter, {
    nullable: true,
  })
  bonusRequests?: BonusRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CheckInOutListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CheckInOutListRelationFilter)
  @IsOptional()
  @Field(() => CheckInOutListRelationFilter, {
    nullable: true,
  })
  checkInOuts?: CheckInOutListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DailyMovementRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DailyMovementRequestListRelationFilter)
  @IsOptional()
  @Field(() => DailyMovementRequestListRelationFilter, {
    nullable: true,
  })
  dailyMovementRequests?: DailyMovementRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DayOffRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DayOffRequestListRelationFilter)
  @IsOptional()
  @Field(() => DayOffRequestListRelationFilter, {
    nullable: true,
  })
  dayOffRequests?: DayOffRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeeDepartmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDepartmentWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeeDepartmentWhereUniqueInput, {
    nullable: true,
  })
  employeeDepartmentId?: EmployeeDepartmentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeGroupWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeeGroupWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeeGroupWhereUniqueInput, {
    nullable: true,
  })
  employeeGroup?: EmployeeGroupWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeRoleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeeRoleWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeeRoleWhereUniqueInput, {
    nullable: true,
  })
  employeeRoleId?: EmployeeRoleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  hireDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isActive?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: () => JobTitleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobTitleWhereUniqueInput)
  @IsOptional()
  @Field(() => JobTitleWhereUniqueInput, {
    nullable: true,
  })
  jobTitle?: JobTitleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  lastYearBalance?: DecimalNullableFilter;

  @ApiProperty({
    required: false,
    type: () => LeaveRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LeaveRequestListRelationFilter)
  @IsOptional()
  @Field(() => LeaveRequestListRelationFilter, {
    nullable: true,
  })
  leavingPermissionRequests?: LeaveRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  note?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => OverNightRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OverNightRequestListRelationFilter)
  @IsOptional()
  @Field(() => OverNightRequestListRelationFilter, {
    nullable: true,
  })
  overNightRequests?: OverNightRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  remainingBalance?: DecimalNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  usedBalance?: DecimalNullableFilter;
}

export { EmployeeWhereInput as EmployeeWhereInput };
