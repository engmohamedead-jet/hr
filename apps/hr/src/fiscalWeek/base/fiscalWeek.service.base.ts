/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FiscalWeek as PrismaFiscalWeek,
  FiscalMonth as PrismaFiscalMonth,
} from "@prisma/client";

export class FiscalWeekServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FiscalWeekCountArgs, "select">
  ): Promise<number> {
    return this.prisma.fiscalWeek.count(args);
  }

  async fiscalWeeks(
    args: Prisma.FiscalWeekFindManyArgs
  ): Promise<PrismaFiscalWeek[]> {
    return this.prisma.fiscalWeek.findMany(args);
  }
  async fiscalWeek(
    args: Prisma.FiscalWeekFindUniqueArgs
  ): Promise<PrismaFiscalWeek | null> {
    return this.prisma.fiscalWeek.findUnique(args);
  }
  async createFiscalWeek(
    args: Prisma.FiscalWeekCreateArgs
  ): Promise<PrismaFiscalWeek> {
    return this.prisma.fiscalWeek.create(args);
  }
  async updateFiscalWeek(
    args: Prisma.FiscalWeekUpdateArgs
  ): Promise<PrismaFiscalWeek> {
    return this.prisma.fiscalWeek.update(args);
  }
  async deleteFiscalWeek(
    args: Prisma.FiscalWeekDeleteArgs
  ): Promise<PrismaFiscalWeek> {
    return this.prisma.fiscalWeek.delete(args);
  }

  async getFiscalMonthId(parentId: string): Promise<PrismaFiscalMonth | null> {
    return this.prisma.fiscalWeek
      .findUnique({
        where: { id: parentId },
      })
      .fiscalMonthId();
  }
}
