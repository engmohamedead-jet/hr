/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  BillOfMaterialDetail as PrismaBillOfMaterialDetail,
  BillOfMaterial as PrismaBillOfMaterial,
  Product as PrismaProduct,
  ProductVariant as PrismaProductVariant,
  Unit as PrismaUnit,
  WorkCenterRouting as PrismaWorkCenterRouting,
} from "@prisma/client";

export class BillOfMaterialDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BillOfMaterialDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.billOfMaterialDetail.count(args);
  }

  async billOfMaterialDetails(
    args: Prisma.BillOfMaterialDetailFindManyArgs
  ): Promise<PrismaBillOfMaterialDetail[]> {
    return this.prisma.billOfMaterialDetail.findMany(args);
  }
  async billOfMaterialDetail(
    args: Prisma.BillOfMaterialDetailFindUniqueArgs
  ): Promise<PrismaBillOfMaterialDetail | null> {
    return this.prisma.billOfMaterialDetail.findUnique(args);
  }
  async createBillOfMaterialDetail(
    args: Prisma.BillOfMaterialDetailCreateArgs
  ): Promise<PrismaBillOfMaterialDetail> {
    return this.prisma.billOfMaterialDetail.create(args);
  }
  async updateBillOfMaterialDetail(
    args: Prisma.BillOfMaterialDetailUpdateArgs
  ): Promise<PrismaBillOfMaterialDetail> {
    return this.prisma.billOfMaterialDetail.update(args);
  }
  async deleteBillOfMaterialDetail(
    args: Prisma.BillOfMaterialDetailDeleteArgs
  ): Promise<PrismaBillOfMaterialDetail> {
    return this.prisma.billOfMaterialDetail.delete(args);
  }

  async getBillOfMaterial(
    parentId: string
  ): Promise<PrismaBillOfMaterial | null> {
    return this.prisma.billOfMaterialDetail
      .findUnique({
        where: { id: parentId },
      })
      .billOfMaterial();
  }

  async getProductId(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.billOfMaterialDetail
      .findUnique({
        where: { id: parentId },
      })
      .productId();
  }

  async getProductVariantId(
    parentId: string
  ): Promise<PrismaProductVariant | null> {
    return this.prisma.billOfMaterialDetail
      .findUnique({
        where: { id: parentId },
      })
      .productVariantId();
  }

  async getUnitId(parentId: string): Promise<PrismaUnit | null> {
    return this.prisma.billOfMaterialDetail
      .findUnique({
        where: { id: parentId },
      })
      .unitId();
  }

  async getWorkCenterRoutingId(
    parentId: string
  ): Promise<PrismaWorkCenterRouting | null> {
    return this.prisma.billOfMaterialDetail
      .findUnique({
        where: { id: parentId },
      })
      .workCenterRoutingId();
  }
}
