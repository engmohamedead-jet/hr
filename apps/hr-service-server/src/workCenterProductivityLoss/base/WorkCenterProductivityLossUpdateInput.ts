/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsBoolean,
  IsEnum,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";

import { EnumWorkCenterProductivityLossLossType } from "./EnumWorkCenterProductivityLossLossType";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { Type } from "class-transformer";
import { WorkCenterWhereUniqueInput } from "../../workCenter/base/WorkCenterWhereUniqueInput";
import { WorkCenterProductivityLossTypeWhereUniqueInput } from "../../workCenterProductivityLossType/base/WorkCenterProductivityLossTypeWhereUniqueInput";

@InputType()
class WorkCenterProductivityLossUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isManual?: boolean;

  @ApiProperty({
    required: false,
    enum: EnumWorkCenterProductivityLossLossType,
  })
  @IsEnum(EnumWorkCenterProductivityLossLossType)
  @IsOptional()
  @Field(() => EnumWorkCenterProductivityLossLossType, {
    nullable: true,
  })
  lossType?: "Availability" | "Perfomance" | "Quality" | "Productive" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  sequence?: number | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => WorkCenterWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterWhereUniqueInput)
  @IsOptional()
  @Field(() => WorkCenterWhereUniqueInput, {
    nullable: true,
  })
  workCenterId?: WorkCenterWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => WorkCenterProductivityLossTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityLossTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => WorkCenterProductivityLossTypeWhereUniqueInput, {
    nullable: true,
  })
  workCenterProductivityLossTypeI?: WorkCenterProductivityLossTypeWhereUniqueInput;
}

export { WorkCenterProductivityLossUpdateInput as WorkCenterProductivityLossUpdateInput };
