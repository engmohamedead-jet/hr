/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ReceiptVoucher as PrismaReceiptVoucher,
  VoucherType as PrismaVoucherType,
} from "@prisma/client";

export class ReceiptVoucherServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReceiptVoucherCountArgs, "select">
  ): Promise<number> {
    return this.prisma.receiptVoucher.count(args);
  }

  async receiptVouchers(
    args: Prisma.ReceiptVoucherFindManyArgs
  ): Promise<PrismaReceiptVoucher[]> {
    return this.prisma.receiptVoucher.findMany(args);
  }
  async receiptVoucher(
    args: Prisma.ReceiptVoucherFindUniqueArgs
  ): Promise<PrismaReceiptVoucher | null> {
    return this.prisma.receiptVoucher.findUnique(args);
  }
  async createReceiptVoucher(
    args: Prisma.ReceiptVoucherCreateArgs
  ): Promise<PrismaReceiptVoucher> {
    return this.prisma.receiptVoucher.create(args);
  }
  async updateReceiptVoucher(
    args: Prisma.ReceiptVoucherUpdateArgs
  ): Promise<PrismaReceiptVoucher> {
    return this.prisma.receiptVoucher.update(args);
  }
  async deleteReceiptVoucher(
    args: Prisma.ReceiptVoucherDeleteArgs
  ): Promise<PrismaReceiptVoucher> {
    return this.prisma.receiptVoucher.delete(args);
  }

  async getVoucherTypeId(parentId: string): Promise<PrismaVoucherType | null> {
    return this.prisma.receiptVoucher
      .findUnique({
        where: { id: parentId },
      })
      .voucherTypeId();
  }
}
