/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  State as PrismaState,
  Bank as PrismaBank,
  City as PrismaCity,
  Country as PrismaCountry,
} from "@prisma/client";

export class StateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StateCountArgs, "select">): Promise<number> {
    return this.prisma.state.count(args);
  }

  async states(args: Prisma.StateFindManyArgs): Promise<PrismaState[]> {
    return this.prisma.state.findMany(args);
  }
  async state(args: Prisma.StateFindUniqueArgs): Promise<PrismaState | null> {
    return this.prisma.state.findUnique(args);
  }
  async createState(args: Prisma.StateCreateArgs): Promise<PrismaState> {
    return this.prisma.state.create(args);
  }
  async updateState(args: Prisma.StateUpdateArgs): Promise<PrismaState> {
    return this.prisma.state.update(args);
  }
  async deleteState(args: Prisma.StateDeleteArgs): Promise<PrismaState> {
    return this.prisma.state.delete(args);
  }

  async findBanks(
    parentId: string,
    args: Prisma.BankFindManyArgs
  ): Promise<PrismaBank[]> {
    return this.prisma.state
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .banks(args);
  }

  async findCities(
    parentId: string,
    args: Prisma.CityFindManyArgs
  ): Promise<PrismaCity[]> {
    return this.prisma.state
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .cities(args);
  }

  async getCountryId(parentId: string): Promise<PrismaCountry | null> {
    return this.prisma.state
      .findUnique({
        where: { id: parentId },
      })
      .countryId();
  }
}
