/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PaymentVoucher as PrismaPaymentVoucher } from "@prisma/client";

export class PaymentVoucherServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentVoucherCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentVoucher.count(args);
  }

  async paymentVouchers(
    args: Prisma.PaymentVoucherFindManyArgs
  ): Promise<PrismaPaymentVoucher[]> {
    return this.prisma.paymentVoucher.findMany(args);
  }
  async paymentVoucher(
    args: Prisma.PaymentVoucherFindUniqueArgs
  ): Promise<PrismaPaymentVoucher | null> {
    return this.prisma.paymentVoucher.findUnique(args);
  }
  async createPaymentVoucher(
    args: Prisma.PaymentVoucherCreateArgs
  ): Promise<PrismaPaymentVoucher> {
    return this.prisma.paymentVoucher.create(args);
  }
  async updatePaymentVoucher(
    args: Prisma.PaymentVoucherUpdateArgs
  ): Promise<PrismaPaymentVoucher> {
    return this.prisma.paymentVoucher.update(args);
  }
  async deletePaymentVoucher(
    args: Prisma.PaymentVoucherDeleteArgs
  ): Promise<PrismaPaymentVoucher> {
    return this.prisma.paymentVoucher.delete(args);
  }
}
