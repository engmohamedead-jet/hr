/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Timezone as PrismaTimezone } from "@prisma/client";

export class TimezoneServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TimezoneCountArgs, "select">): Promise<number> {
    return this.prisma.timezone.count(args);
  }

  async timezones(
    args: Prisma.TimezoneFindManyArgs
  ): Promise<PrismaTimezone[]> {
    return this.prisma.timezone.findMany(args);
  }
  async timezone(
    args: Prisma.TimezoneFindUniqueArgs
  ): Promise<PrismaTimezone | null> {
    return this.prisma.timezone.findUnique(args);
  }
  async createTimezone(
    args: Prisma.TimezoneCreateArgs
  ): Promise<PrismaTimezone> {
    return this.prisma.timezone.create(args);
  }
  async updateTimezone(
    args: Prisma.TimezoneUpdateArgs
  ): Promise<PrismaTimezone> {
    return this.prisma.timezone.update(args);
  }
  async deleteTimezone(
    args: Prisma.TimezoneDeleteArgs
  ): Promise<PrismaTimezone> {
    return this.prisma.timezone.delete(args);
  }
}
