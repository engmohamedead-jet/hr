/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  SalePriceType as PrismaSalePriceType,
  SaleDetail as PrismaSaleDetail,
  SaleQuotationDetail as PrismaSaleQuotationDetail,
  SaleReturnDetail as PrismaSaleReturnDetail,
  SaleReturn as PrismaSaleReturn,
  Sale as PrismaSale,
  Tenant as PrismaTenant,
} from "@prisma/client";

export class SalePriceTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalePriceTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salePriceType.count(args);
  }

  async salePriceTypes(
    args: Prisma.SalePriceTypeFindManyArgs
  ): Promise<PrismaSalePriceType[]> {
    return this.prisma.salePriceType.findMany(args);
  }
  async salePriceType(
    args: Prisma.SalePriceTypeFindUniqueArgs
  ): Promise<PrismaSalePriceType | null> {
    return this.prisma.salePriceType.findUnique(args);
  }
  async createSalePriceType(
    args: Prisma.SalePriceTypeCreateArgs
  ): Promise<PrismaSalePriceType> {
    return this.prisma.salePriceType.create(args);
  }
  async updateSalePriceType(
    args: Prisma.SalePriceTypeUpdateArgs
  ): Promise<PrismaSalePriceType> {
    return this.prisma.salePriceType.update(args);
  }
  async deleteSalePriceType(
    args: Prisma.SalePriceTypeDeleteArgs
  ): Promise<PrismaSalePriceType> {
    return this.prisma.salePriceType.delete(args);
  }

  async getSaleDetails(parentId: number): Promise<PrismaSaleDetail | null> {
    return this.prisma.salePriceType
      .findUnique({
        where: { id: parentId },
      })
      .saleDetails();
  }

  async getSaleQuotationDetails(
    parentId: number
  ): Promise<PrismaSaleQuotationDetail | null> {
    return this.prisma.salePriceType
      .findUnique({
        where: { id: parentId },
      })
      .saleQuotationDetails();
  }

  async getSaleReturnDetails(
    parentId: number
  ): Promise<PrismaSaleReturnDetail | null> {
    return this.prisma.salePriceType
      .findUnique({
        where: { id: parentId },
      })
      .saleReturnDetails();
  }

  async getSaleReturns(parentId: number): Promise<PrismaSaleReturn | null> {
    return this.prisma.salePriceType
      .findUnique({
        where: { id: parentId },
      })
      .saleReturns();
  }

  async getSales(parentId: number): Promise<PrismaSale | null> {
    return this.prisma.salePriceType
      .findUnique({
        where: { id: parentId },
      })
      .sales();
  }

  async getTenantId(parentId: number): Promise<PrismaTenant | null> {
    return this.prisma.salePriceType
      .findUnique({
        where: { id: parentId },
      })
      .tenantId();
  }
}
