/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  WorkCenterCapacity as PrismaWorkCenterCapacity,
  Tenant as PrismaTenant,
  WorkCenter as PrismaWorkCenter,
} from "@prisma/client";

export class WorkCenterCapacityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WorkCenterCapacityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.workCenterCapacity.count(args);
  }

  async workCenterCapacities(
    args: Prisma.WorkCenterCapacityFindManyArgs
  ): Promise<PrismaWorkCenterCapacity[]> {
    return this.prisma.workCenterCapacity.findMany(args);
  }
  async workCenterCapacity(
    args: Prisma.WorkCenterCapacityFindUniqueArgs
  ): Promise<PrismaWorkCenterCapacity | null> {
    return this.prisma.workCenterCapacity.findUnique(args);
  }
  async createWorkCenterCapacity(
    args: Prisma.WorkCenterCapacityCreateArgs
  ): Promise<PrismaWorkCenterCapacity> {
    return this.prisma.workCenterCapacity.create(args);
  }
  async updateWorkCenterCapacity(
    args: Prisma.WorkCenterCapacityUpdateArgs
  ): Promise<PrismaWorkCenterCapacity> {
    return this.prisma.workCenterCapacity.update(args);
  }
  async deleteWorkCenterCapacity(
    args: Prisma.WorkCenterCapacityDeleteArgs
  ): Promise<PrismaWorkCenterCapacity> {
    return this.prisma.workCenterCapacity.delete(args);
  }

  async getTenantId(parentId: string): Promise<PrismaTenant | null> {
    return this.prisma.workCenterCapacity
      .findUnique({
        where: { id: parentId },
      })
      .tenantId();
  }

  async getWorkCenterId(parentId: string): Promise<PrismaWorkCenter | null> {
    return this.prisma.workCenterCapacity
      .findUnique({
        where: { id: parentId },
      })
      .workCenterId();
  }
}
