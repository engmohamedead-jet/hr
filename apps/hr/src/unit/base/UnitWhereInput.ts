/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BillOfMaterialDetailListRelationFilter } from "../../billOfMaterialDetail/base/BillOfMaterialDetailListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { BillOfMaterialListRelationFilter } from "../../billOfMaterial/base/BillOfMaterialListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { ProductUnitWhereUniqueInput } from "../../productUnit/base/ProductUnitWhereUniqueInput";
import { ProductUnitListRelationFilter } from "../../productUnit/base/ProductUnitListRelationFilter";
import { ProductionOrderListRelationFilter } from "../../productionOrder/base/ProductionOrderListRelationFilter";
import { ProductListRelationFilter } from "../../product/base/ProductListRelationFilter";
import { PurchaseDetailListRelationFilter } from "../../purchaseDetail/base/PurchaseDetailListRelationFilter";
import { PurchaseReturnDetailListRelationFilter } from "../../purchaseReturnDetail/base/PurchaseReturnDetailListRelationFilter";
import { SaleDetailListRelationFilter } from "../../saleDetail/base/SaleDetailListRelationFilter";
import { SaleOrderDetailListRelationFilter } from "../../saleOrderDetail/base/SaleOrderDetailListRelationFilter";
import { SaleQuotationDetailListRelationFilter } from "../../saleQuotationDetail/base/SaleQuotationDetailListRelationFilter";
import { SaleReturnDetailListRelationFilter } from "../../saleReturnDetail/base/SaleReturnDetailListRelationFilter";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class UnitWhereInput {
  @ApiProperty({
    required: false,
    type: () => BillOfMaterialDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BillOfMaterialDetailListRelationFilter)
  @IsOptional()
  @Field(() => BillOfMaterialDetailListRelationFilter, {
    nullable: true,
  })
  billOfMaterialDetails?: BillOfMaterialDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => BillOfMaterialListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BillOfMaterialListRelationFilter)
  @IsOptional()
  @Field(() => BillOfMaterialListRelationFilter, {
    nullable: true,
  })
  billOfMaterials?: BillOfMaterialListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isActive?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isCompound?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isDefault?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  normalizedName?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  note?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ProductUnitWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductUnitWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductUnitWhereUniqueInput, {
    nullable: true,
  })
  productUnitCompareUnits?: ProductUnitWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ProductUnitListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductUnitListRelationFilter)
  @IsOptional()
  @Field(() => ProductUnitListRelationFilter, {
    nullable: true,
  })
  productUnits?: ProductUnitListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductionOrderListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductionOrderListRelationFilter)
  @IsOptional()
  @Field(() => ProductionOrderListRelationFilter, {
    nullable: true,
  })
  productionOrders?: ProductionOrderListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductListRelationFilter)
  @IsOptional()
  @Field(() => ProductListRelationFilter, {
    nullable: true,
  })
  products?: ProductListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PurchaseDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PurchaseDetailListRelationFilter)
  @IsOptional()
  @Field(() => PurchaseDetailListRelationFilter, {
    nullable: true,
  })
  purchaseDetails?: PurchaseDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PurchaseReturnDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PurchaseReturnDetailListRelationFilter)
  @IsOptional()
  @Field(() => PurchaseReturnDetailListRelationFilter, {
    nullable: true,
  })
  purchaseReturnDetails?: PurchaseReturnDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SaleDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SaleDetailListRelationFilter)
  @IsOptional()
  @Field(() => SaleDetailListRelationFilter, {
    nullable: true,
  })
  saleDetails?: SaleDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SaleOrderDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SaleOrderDetailListRelationFilter)
  @IsOptional()
  @Field(() => SaleOrderDetailListRelationFilter, {
    nullable: true,
  })
  saleOrderDetails?: SaleOrderDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SaleQuotationDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SaleQuotationDetailListRelationFilter)
  @IsOptional()
  @Field(() => SaleQuotationDetailListRelationFilter, {
    nullable: true,
  })
  saleQuotationDetails?: SaleQuotationDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SaleReturnDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SaleReturnDetailListRelationFilter)
  @IsOptional()
  @Field(() => SaleReturnDetailListRelationFilter, {
    nullable: true,
  })
  saleReturnDetails?: SaleReturnDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput;
}

export { UnitWhereInput as UnitWhereInput };
