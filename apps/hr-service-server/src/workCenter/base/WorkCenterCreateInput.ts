/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Max,
  IsNumber,
  IsBoolean,
  Min,
  ValidateNested,
} from "class-validator";

import { Decimal } from "decimal.js";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { Type } from "class-transformer";
import { WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput } from "./WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput";
import { WorkCenterCapacityCreateNestedManyWithoutWorkCentersInput } from "./WorkCenterCapacityCreateNestedManyWithoutWorkCentersInput";
import { WorkCenterProductivityCreateNestedManyWithoutWorkCentersInput } from "./WorkCenterProductivityCreateNestedManyWithoutWorkCentersInput";
import { WorkCenterProductivityLossCreateNestedManyWithoutWorkCentersInput } from "./WorkCenterProductivityLossCreateNestedManyWithoutWorkCentersInput";
import { WorkCenterRoutingCreateNestedManyWithoutWorkCentersInput } from "./WorkCenterRoutingCreateNestedManyWithoutWorkCentersInput";
import { WorkCenterWorkCenterTagCreateNestedManyWithoutWorkCentersInput } from "./WorkCenterWorkCenterTagCreateNestedManyWithoutWorkCentersInput";

@InputType()
class WorkCenterCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  analyticDistribution?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  color?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  costPerHour?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  defaultCapacity?: Decimal | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isActive!: boolean;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isProductive!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  normalizedName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  oeeTareget?: Decimal | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(99999999999)
  @Field(() => Number)
  sequence!: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  startTime?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  stopTime?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  timeEfficiency?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterAlternativeWorkCenters?: WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterAlternatives?: WorkCenterAlternativeCreateNestedManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterCapacityCreateNestedManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterCapacityCreateNestedManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterCapacityCreateNestedManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterCapacities?: WorkCenterCapacityCreateNestedManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterProductivityCreateNestedManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityCreateNestedManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterProductivityCreateNestedManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterProductivities?: WorkCenterProductivityCreateNestedManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () =>
      WorkCenterProductivityLossCreateNestedManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityLossCreateNestedManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(
    () => WorkCenterProductivityLossCreateNestedManyWithoutWorkCentersInput,
    {
      nullable: true,
    }
  )
  workCenterProductivityLosses?: WorkCenterProductivityLossCreateNestedManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterRoutingCreateNestedManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterRoutingCreateNestedManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterRoutingCreateNestedManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterRoutings?: WorkCenterRoutingCreateNestedManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterWorkCenterTagCreateNestedManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterWorkCenterTagCreateNestedManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterWorkCenterTagCreateNestedManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterWorkCenterTags?: WorkCenterWorkCenterTagCreateNestedManyWithoutWorkCentersInput;
}

export { WorkCenterCreateInput as WorkCenterCreateInput };
