/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BankUpdateManyWithoutCountriesInput } from "./BankUpdateManyWithoutCountriesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { StateUpdateManyWithoutCountriesInput } from "./StateUpdateManyWithoutCountriesInput";

@InputType()
class CountryUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BankUpdateManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => BankUpdateManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => BankUpdateManyWithoutCountriesInput, {
    nullable: true,
  })
  banks?: BankUpdateManyWithoutCountriesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => StateUpdateManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => StateUpdateManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => StateUpdateManyWithoutCountriesInput, {
    nullable: true,
  })
  states?: StateUpdateManyWithoutCountriesInput;
}

export { CountryUpdateInput as CountryUpdateInput };
