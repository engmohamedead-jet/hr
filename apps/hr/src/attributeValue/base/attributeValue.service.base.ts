/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AttributeValue as PrismaAttributeValue,
  Attribute as PrismaAttribute,
} from "@prisma/client";

export class AttributeValueServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AttributeValueCountArgs, "select">
  ): Promise<number> {
    return this.prisma.attributeValue.count(args);
  }

  async attributeValues(
    args: Prisma.AttributeValueFindManyArgs
  ): Promise<PrismaAttributeValue[]> {
    return this.prisma.attributeValue.findMany(args);
  }
  async attributeValue(
    args: Prisma.AttributeValueFindUniqueArgs
  ): Promise<PrismaAttributeValue | null> {
    return this.prisma.attributeValue.findUnique(args);
  }
  async createAttributeValue(
    args: Prisma.AttributeValueCreateArgs
  ): Promise<PrismaAttributeValue> {
    return this.prisma.attributeValue.create(args);
  }
  async updateAttributeValue(
    args: Prisma.AttributeValueUpdateArgs
  ): Promise<PrismaAttributeValue> {
    return this.prisma.attributeValue.update(args);
  }
  async deleteAttributeValue(
    args: Prisma.AttributeValueDeleteArgs
  ): Promise<PrismaAttributeValue> {
    return this.prisma.attributeValue.delete(args);
  }

  async getAttributeId(parentId: string): Promise<PrismaAttribute | null> {
    return this.prisma.attributeValue
      .findUnique({
        where: { id: parentId },
      })
      .attributeId();
  }
}
