/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ProductionAvailability as PrismaProductionAvailability,
  Tenant as PrismaTenant,
} from "@prisma/client";

export class ProductionAvailabilityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductionAvailabilityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productionAvailability.count(args);
  }

  async productionAvailabilities(
    args: Prisma.ProductionAvailabilityFindManyArgs
  ): Promise<PrismaProductionAvailability[]> {
    return this.prisma.productionAvailability.findMany(args);
  }
  async productionAvailability(
    args: Prisma.ProductionAvailabilityFindUniqueArgs
  ): Promise<PrismaProductionAvailability | null> {
    return this.prisma.productionAvailability.findUnique(args);
  }
  async createProductionAvailability(
    args: Prisma.ProductionAvailabilityCreateArgs
  ): Promise<PrismaProductionAvailability> {
    return this.prisma.productionAvailability.create(args);
  }
  async updateProductionAvailability(
    args: Prisma.ProductionAvailabilityUpdateArgs
  ): Promise<PrismaProductionAvailability> {
    return this.prisma.productionAvailability.update(args);
  }
  async deleteProductionAvailability(
    args: Prisma.ProductionAvailabilityDeleteArgs
  ): Promise<PrismaProductionAvailability> {
    return this.prisma.productionAvailability.delete(args);
  }

  async getTenantIId(parentId: number): Promise<PrismaTenant | null> {
    return this.prisma.productionAvailability
      .findUnique({
        where: { id: parentId },
      })
      .tenantIId();
  }
}
