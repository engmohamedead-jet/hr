/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Max,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { PeriodWhereUniqueInput } from "../../period/base/PeriodWhereUniqueInput";
import { Type } from "class-transformer";
import { InstallmentSaleFeeWhereUniqueInput } from "../../installmentSaleFee/base/InstallmentSaleFeeWhereUniqueInput";
import { PurchaseReturnCreateNestedManyWithoutPaymentTermsInput } from "./PurchaseReturnCreateNestedManyWithoutPaymentTermsInput";
import { PurchaseCreateNestedManyWithoutPaymentTermsInput } from "./PurchaseCreateNestedManyWithoutPaymentTermsInput";
import { SaleReturnCreateNestedManyWithoutPaymentTermsInput } from "./SaleReturnCreateNestedManyWithoutPaymentTermsInput";
import { SaleCreateNestedManyWithoutPaymentTermsInput } from "./SaleCreateNestedManyWithoutPaymentTermsInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class PaymentTermCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  dueDays!: number;

  @ApiProperty({
    required: false,
    type: () => PeriodWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PeriodWhereUniqueInput)
  @IsOptional()
  @Field(() => PeriodWhereUniqueInput, {
    nullable: true,
  })
  duePeriodId?: PeriodWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  gracePeriod!: number;

  @ApiProperty({
    required: false,
    type: () => InstallmentSaleFeeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => InstallmentSaleFeeWhereUniqueInput)
  @IsOptional()
  @Field(() => InstallmentSaleFeeWhereUniqueInput, {
    nullable: true,
  })
  installmentSaleFeeId?: InstallmentSaleFeeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PeriodWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PeriodWhereUniqueInput)
  @IsOptional()
  @Field(() => PeriodWhereUniqueInput, {
    nullable: true,
  })
  installmentSaleFeePostingPeriod?: PeriodWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isActive!: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDefault?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDueOnDate?: boolean | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  normalizedName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => PurchaseReturnCreateNestedManyWithoutPaymentTermsInput,
  })
  @ValidateNested()
  @Type(() => PurchaseReturnCreateNestedManyWithoutPaymentTermsInput)
  @IsOptional()
  @Field(() => PurchaseReturnCreateNestedManyWithoutPaymentTermsInput, {
    nullable: true,
  })
  purchaseReturns?: PurchaseReturnCreateNestedManyWithoutPaymentTermsInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseCreateNestedManyWithoutPaymentTermsInput,
  })
  @ValidateNested()
  @Type(() => PurchaseCreateNestedManyWithoutPaymentTermsInput)
  @IsOptional()
  @Field(() => PurchaseCreateNestedManyWithoutPaymentTermsInput, {
    nullable: true,
  })
  purchases?: PurchaseCreateNestedManyWithoutPaymentTermsInput;

  @ApiProperty({
    required: false,
    type: () => SaleReturnCreateNestedManyWithoutPaymentTermsInput,
  })
  @ValidateNested()
  @Type(() => SaleReturnCreateNestedManyWithoutPaymentTermsInput)
  @IsOptional()
  @Field(() => SaleReturnCreateNestedManyWithoutPaymentTermsInput, {
    nullable: true,
  })
  saleReturns?: SaleReturnCreateNestedManyWithoutPaymentTermsInput;

  @ApiProperty({
    required: false,
    type: () => SaleCreateNestedManyWithoutPaymentTermsInput,
  })
  @ValidateNested()
  @Type(() => SaleCreateNestedManyWithoutPaymentTermsInput)
  @IsOptional()
  @Field(() => SaleCreateNestedManyWithoutPaymentTermsInput, {
    nullable: true,
  })
  sales?: SaleCreateNestedManyWithoutPaymentTermsInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;
}

export { PaymentTermCreateInput as PaymentTermCreateInput };
