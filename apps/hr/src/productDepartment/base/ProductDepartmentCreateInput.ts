/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { ProductDepartmentWhereUniqueInput } from "./ProductDepartmentWhereUniqueInput";
import { Type } from "class-transformer";
import { ProductDepartmentCreateNestedManyWithoutProductDepartmentsInput } from "./ProductDepartmentCreateNestedManyWithoutProductDepartmentsInput";
import { ProductCreateNestedManyWithoutProductDepartmentsInput } from "./ProductCreateNestedManyWithoutProductDepartmentsInput";

@InputType()
class ProductDepartmentCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isDefault!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  normalizedName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProductDepartmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductDepartmentWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductDepartmentWhereUniqueInput, {
    nullable: true,
  })
  parentProductDepartment?: ProductDepartmentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductDepartmentCreateNestedManyWithoutProductDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => ProductDepartmentCreateNestedManyWithoutProductDepartmentsInput)
  @IsOptional()
  @Field(
    () => ProductDepartmentCreateNestedManyWithoutProductDepartmentsInput,
    {
      nullable: true,
    }
  )
  productDepartments?: ProductDepartmentCreateNestedManyWithoutProductDepartmentsInput;

  @ApiProperty({
    required: false,
    type: () => ProductCreateNestedManyWithoutProductDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => ProductCreateNestedManyWithoutProductDepartmentsInput)
  @IsOptional()
  @Field(() => ProductCreateNestedManyWithoutProductDepartmentsInput, {
    nullable: true,
  })
  products?: ProductCreateNestedManyWithoutProductDepartmentsInput;
}

export { ProductDepartmentCreateInput as ProductDepartmentCreateInput };
