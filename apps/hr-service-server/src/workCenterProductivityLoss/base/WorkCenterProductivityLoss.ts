/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsBoolean,
  IsEnum,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";

import { Type } from "class-transformer";
import { EnumWorkCenterProductivityLossLossType } from "./EnumWorkCenterProductivityLossLossType";
import { Tenant } from "../../tenant/base/Tenant";
import { WorkCenter } from "../../workCenter/base/WorkCenter";
import { WorkCenterProductivityLossType } from "../../workCenterProductivityLossType/base/WorkCenterProductivityLossType";

@ObjectType()
class WorkCenterProductivityLoss {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isActive!: boolean;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isManual!: boolean;

  @ApiProperty({
    required: false,
    enum: EnumWorkCenterProductivityLossLossType,
  })
  @IsEnum(EnumWorkCenterProductivityLossLossType)
  @IsOptional()
  @Field(() => EnumWorkCenterProductivityLossLossType, {
    nullable: true,
  })
  lossType?: "Availability" | "Perfomance" | "Quality" | "Productive" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  normalizedName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  sequence!: number | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenantId?: Tenant | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => WorkCenter,
  })
  @ValidateNested()
  @Type(() => WorkCenter)
  @IsOptional()
  workCenterId?: WorkCenter | null;

  @ApiProperty({
    required: true,
    type: () => WorkCenterProductivityLossType,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityLossType)
  workCenterProductivityLossTypeI?: WorkCenterProductivityLossType;
}

export { WorkCenterProductivityLoss as WorkCenterProductivityLoss };
