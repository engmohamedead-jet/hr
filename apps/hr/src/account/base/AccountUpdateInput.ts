/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ProductGroupUpdateManyWithoutAccountsInput } from "./ProductGroupUpdateManyWithoutAccountsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { InstallmentSaleFeeUpdateManyWithoutAccountsInput } from "./InstallmentSaleFeeUpdateManyWithoutAccountsInput";
import { AccountWhereUniqueInput } from "./AccountWhereUniqueInput";
import { AccountUpdateManyWithoutAccountsInput } from "./AccountUpdateManyWithoutAccountsInput";
import { SalePersonUpdateManyWithoutAccountsInput } from "./SalePersonUpdateManyWithoutAccountsInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class AccountUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  SaleReturnAccountProductGroups?: ProductGroupUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountNumber?: string;

  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  aleAccountProductGroups?: ProductGroupUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  costOfGoodsSoldAccountProductGroups?: ProductGroupUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => InstallmentSaleFeeUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => InstallmentSaleFeeUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => InstallmentSaleFeeUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  installmentSaleFees?: InstallmentSaleFeeUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  inventoryAccountProductGroups?: ProductGroupUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isMasterAccount?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => AccountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountWhereUniqueInput)
  @IsOptional()
  @Field(() => AccountWhereUniqueInput, {
    nullable: true,
  })
  parentAccountId?: AccountWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => AccountUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => AccountUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => AccountUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  parentAccounts?: AccountUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  purchaseAccountProductGroups?: ProductGroupUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  purchaseDiscountAccountProductGroups?: ProductGroupUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  purchaseReturnAccountProductGroups?: ProductGroupUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  saleDiscountAccountProductGroups?: ProductGroupUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => SalePersonUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => SalePersonUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => SalePersonUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  salePeople?: SalePersonUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;
}

export { AccountUpdateInput as AccountUpdateInput };
