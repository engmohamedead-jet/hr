/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { PurchaseReturnUpdateManyWithoutPaymentTypesInput } from "./PurchaseReturnUpdateManyWithoutPaymentTypesInput";
import { Type } from "class-transformer";
import { PurchaseUpdateManyWithoutPaymentTypesInput } from "./PurchaseUpdateManyWithoutPaymentTypesInput";
import { SaleOrderUpdateManyWithoutPaymentTypesInput } from "./SaleOrderUpdateManyWithoutPaymentTypesInput";
import { SaleReturnUpdateManyWithoutPaymentTypesInput } from "./SaleReturnUpdateManyWithoutPaymentTypesInput";
import { SaleUpdateManyWithoutPaymentTypesInput } from "./SaleUpdateManyWithoutPaymentTypesInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class PaymentTypeUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDefault?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => PurchaseReturnUpdateManyWithoutPaymentTypesInput,
  })
  @ValidateNested()
  @Type(() => PurchaseReturnUpdateManyWithoutPaymentTypesInput)
  @IsOptional()
  @Field(() => PurchaseReturnUpdateManyWithoutPaymentTypesInput, {
    nullable: true,
  })
  purchaseReturns?: PurchaseReturnUpdateManyWithoutPaymentTypesInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseUpdateManyWithoutPaymentTypesInput,
  })
  @ValidateNested()
  @Type(() => PurchaseUpdateManyWithoutPaymentTypesInput)
  @IsOptional()
  @Field(() => PurchaseUpdateManyWithoutPaymentTypesInput, {
    nullable: true,
  })
  purchases?: PurchaseUpdateManyWithoutPaymentTypesInput;

  @ApiProperty({
    required: false,
    type: () => SaleOrderUpdateManyWithoutPaymentTypesInput,
  })
  @ValidateNested()
  @Type(() => SaleOrderUpdateManyWithoutPaymentTypesInput)
  @IsOptional()
  @Field(() => SaleOrderUpdateManyWithoutPaymentTypesInput, {
    nullable: true,
  })
  saleOrders?: SaleOrderUpdateManyWithoutPaymentTypesInput;

  @ApiProperty({
    required: false,
    type: () => SaleReturnUpdateManyWithoutPaymentTypesInput,
  })
  @ValidateNested()
  @Type(() => SaleReturnUpdateManyWithoutPaymentTypesInput)
  @IsOptional()
  @Field(() => SaleReturnUpdateManyWithoutPaymentTypesInput, {
    nullable: true,
  })
  saleReturns?: SaleReturnUpdateManyWithoutPaymentTypesInput;

  @ApiProperty({
    required: false,
    type: () => SaleUpdateManyWithoutPaymentTypesInput,
  })
  @ValidateNested()
  @Type(() => SaleUpdateManyWithoutPaymentTypesInput)
  @IsOptional()
  @Field(() => SaleUpdateManyWithoutPaymentTypesInput, {
    nullable: true,
  })
  sales?: SaleUpdateManyWithoutPaymentTypesInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;
}

export { PaymentTypeUpdateInput as PaymentTypeUpdateInput };
