/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountUpdateManyWithoutTenantsInput } from "./AccountUpdateManyWithoutTenantsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { ApplicationDependencyUpdateManyWithoutTenantsInput } from "./ApplicationDependencyUpdateManyWithoutTenantsInput";
import { ApplicationUpdateManyWithoutTenantsInput } from "./ApplicationUpdateManyWithoutTenantsInput";
import { AttributeValueUpdateManyWithoutTenantsInput } from "./AttributeValueUpdateManyWithoutTenantsInput";
import { AttributeUpdateManyWithoutTenantsInput } from "./AttributeUpdateManyWithoutTenantsInput";
import { BankBranchUpdateManyWithoutTenantsInput } from "./BankBranchUpdateManyWithoutTenantsInput";
import { BankTypeUpdateManyWithoutTenantsInput } from "./BankTypeUpdateManyWithoutTenantsInput";
import { BarcodeTypeUpdateManyWithoutTenantsInput } from "./BarcodeTypeUpdateManyWithoutTenantsInput";
import { BillOfMaterialDetailUpdateManyWithoutTenantsInput } from "./BillOfMaterialDetailUpdateManyWithoutTenantsInput";
import { BillOfMaterialTypeUpdateManyWithoutTenantsInput } from "./BillOfMaterialTypeUpdateManyWithoutTenantsInput";
import { BillOfMaterialUpdateManyWithoutTenantsInput } from "./BillOfMaterialUpdateManyWithoutTenantsInput";
import { CashRepositoryUpdateManyWithoutTenantsInput } from "./CashRepositoryUpdateManyWithoutTenantsInput";
import { CurrencyUpdateManyWithoutTenantsInput } from "./CurrencyUpdateManyWithoutTenantsInput";
import { CustomerUpdateManyWithoutTenantsInput } from "./CustomerUpdateManyWithoutTenantsInput";
import { EmployeeClassUpdateManyWithoutTenantsInput } from "./EmployeeClassUpdateManyWithoutTenantsInput";
import { EmployeeDepartmentUpdateManyWithoutTenantsInput } from "./EmployeeDepartmentUpdateManyWithoutTenantsInput";
import { EmployeeUpdateManyWithoutTenantsInput } from "./EmployeeUpdateManyWithoutTenantsInput";
import { InstallmentSaleFeeUpdateManyWithoutTenantsInput } from "./InstallmentSaleFeeUpdateManyWithoutTenantsInput";
import { InvoiceTypeUpdateManyWithoutTenantsInput } from "./InvoiceTypeUpdateManyWithoutTenantsInput";
import { OrderStatusUpdateManyWithoutTenantsInput } from "./OrderStatusUpdateManyWithoutTenantsInput";
import { PaymentMethodUpdateManyWithoutTenantsInput } from "./PaymentMethodUpdateManyWithoutTenantsInput";
import { PaymentStatusUpdateManyWithoutTenantsInput } from "./PaymentStatusUpdateManyWithoutTenantsInput";
import { PaymentTermUpdateManyWithoutTenantsInput } from "./PaymentTermUpdateManyWithoutTenantsInput";
import { PaymentTypeUpdateManyWithoutTenantsInput } from "./PaymentTypeUpdateManyWithoutTenantsInput";
import { PeriodUpdateManyWithoutTenantsInput } from "./PeriodUpdateManyWithoutTenantsInput";
import { PrintTemplateContentUpdateManyWithoutTenantsInput } from "./PrintTemplateContentUpdateManyWithoutTenantsInput";
import { PrintTemplateGroupUpdateManyWithoutTenantsInput } from "./PrintTemplateGroupUpdateManyWithoutTenantsInput";
import { PrintTemplateUpdateManyWithoutTenantsInput } from "./PrintTemplateUpdateManyWithoutTenantsInput";
import { ProductBarcodeUpdateManyWithoutTenantsInput } from "./ProductBarcodeUpdateManyWithoutTenantsInput";
import { ProductCategoryUpdateManyWithoutTenantsInput } from "./ProductCategoryUpdateManyWithoutTenantsInput";
import { ProductDepartmentUpdateManyWithoutTenantsInput } from "./ProductDepartmentUpdateManyWithoutTenantsInput";
import { ProductGroupUpdateManyWithoutTenantsInput } from "./ProductGroupUpdateManyWithoutTenantsInput";
import { ProductTypeUpdateManyWithoutTenantsInput } from "./ProductTypeUpdateManyWithoutTenantsInput";
import { ProductUnitUpdateManyWithoutTenantsInput } from "./ProductUnitUpdateManyWithoutTenantsInput";
import { ProductVariantUpdateManyWithoutTenantsInput } from "./ProductVariantUpdateManyWithoutTenantsInput";
import { ProductionAvailabilityUpdateManyWithoutTenantsInput } from "./ProductionAvailabilityUpdateManyWithoutTenantsInput";
import { ProductionDocumentUpdateManyWithoutTenantsInput } from "./ProductionDocumentUpdateManyWithoutTenantsInput";
import { ProductionOrderUpdateManyWithoutTenantsInput } from "./ProductionOrderUpdateManyWithoutTenantsInput";
import { ProductUpdateManyWithoutTenantsInput } from "./ProductUpdateManyWithoutTenantsInput";
import { PurchaseDetailUpdateManyWithoutTenantsInput } from "./PurchaseDetailUpdateManyWithoutTenantsInput";
import { PurchasePriceTypeUpdateManyWithoutTenantsInput } from "./PurchasePriceTypeUpdateManyWithoutTenantsInput";
import { PurchaseReturnDetailUpdateManyWithoutTenantsInput } from "./PurchaseReturnDetailUpdateManyWithoutTenantsInput";
import { PurchaseReturnUpdateManyWithoutTenantsInput } from "./PurchaseReturnUpdateManyWithoutTenantsInput";
import { PurchaseUpdateManyWithoutTenantsInput } from "./PurchaseUpdateManyWithoutTenantsInput";
import { ResourceTypeUpdateManyWithoutTenantsInput } from "./ResourceTypeUpdateManyWithoutTenantsInput";
import { ResourceUpdateManyWithoutTenantsInput } from "./ResourceUpdateManyWithoutTenantsInput";
import { RoleGroupUpdateManyWithoutTenantsInput } from "./RoleGroupUpdateManyWithoutTenantsInput";
import { SalaryItemGroupUpdateManyWithoutTenantsInput } from "./SalaryItemGroupUpdateManyWithoutTenantsInput";
import { SalaryItemTypeUpdateManyWithoutTenantsInput } from "./SalaryItemTypeUpdateManyWithoutTenantsInput";
import { SalaryItemUpdateManyWithoutTenantsInput } from "./SalaryItemUpdateManyWithoutTenantsInput";
import { SalaryLawUpdateManyWithoutTenantsInput } from "./SalaryLawUpdateManyWithoutTenantsInput";
import { SaleDetailUpdateManyWithoutTenantsInput } from "./SaleDetailUpdateManyWithoutTenantsInput";
import { SaleOrderDetailUpdateManyWithoutTenantsInput } from "./SaleOrderDetailUpdateManyWithoutTenantsInput";
import { SaleOrderUpdateManyWithoutTenantsInput } from "./SaleOrderUpdateManyWithoutTenantsInput";
import { SalePaymentUpdateManyWithoutTenantsInput } from "./SalePaymentUpdateManyWithoutTenantsInput";
import { SalePersonUpdateManyWithoutTenantsInput } from "./SalePersonUpdateManyWithoutTenantsInput";
import { SalePriceTypeUpdateManyWithoutTenantsInput } from "./SalePriceTypeUpdateManyWithoutTenantsInput";
import { SaleQuotationDetailUpdateManyWithoutTenantsInput } from "./SaleQuotationDetailUpdateManyWithoutTenantsInput";
import { SaleQuotationUpdateManyWithoutTenantsInput } from "./SaleQuotationUpdateManyWithoutTenantsInput";
import { SaleReturnDetailUpdateManyWithoutTenantsInput } from "./SaleReturnDetailUpdateManyWithoutTenantsInput";
import { SaleReturnUpdateManyWithoutTenantsInput } from "./SaleReturnUpdateManyWithoutTenantsInput";
import { SaleTaxUpdateManyWithoutTenantsInput } from "./SaleTaxUpdateManyWithoutTenantsInput";
import { SaleTeamUpdateManyWithoutTenantsInput } from "./SaleTeamUpdateManyWithoutTenantsInput";
import { SaleUpdateManyWithoutTenantsInput } from "./SaleUpdateManyWithoutTenantsInput";
import { ScrapReasonUpdateManyWithoutTenantsInput } from "./ScrapReasonUpdateManyWithoutTenantsInput";
import { ShippingStatusUpdateManyWithoutTenantsInput } from "./ShippingStatusUpdateManyWithoutTenantsInput";
import { StoreUpdateManyWithoutTenantsInput } from "./StoreUpdateManyWithoutTenantsInput";
import { SupplierUpdateManyWithoutTenantsInput } from "./SupplierUpdateManyWithoutTenantsInput";
import { UnitUpdateManyWithoutTenantsInput } from "./UnitUpdateManyWithoutTenantsInput";
import { UserUpdateManyWithoutTenantsInput } from "./UserUpdateManyWithoutTenantsInput";
import { WorkCenterRoutingUpdateManyWithoutTenantsInput } from "./WorkCenterRoutingUpdateManyWithoutTenantsInput";
import { WorkCenterUpdateManyWithoutTenantsInput } from "./WorkCenterUpdateManyWithoutTenantsInput";

@InputType()
class TenantUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AccountUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => AccountUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => AccountUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  accounts?: AccountUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ApplicationDependencyUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ApplicationDependencyUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ApplicationDependencyUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  applicationDependencies?: ApplicationDependencyUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ApplicationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ApplicationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ApplicationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  applications?: ApplicationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => AttributeValueUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => AttributeValueUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => AttributeValueUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  attributeValues?: AttributeValueUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => AttributeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => AttributeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => AttributeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  attributes?: AttributeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => BankBranchUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => BankBranchUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => BankBranchUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  bankBranches?: BankBranchUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => BankTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => BankTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => BankTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  bankTypes?: BankTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => BarcodeTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => BarcodeTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => BarcodeTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  barcodeTypes?: BarcodeTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => BillOfMaterialDetailUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => BillOfMaterialDetailUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => BillOfMaterialDetailUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  billOfMaterialDetails?: BillOfMaterialDetailUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => BillOfMaterialTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => BillOfMaterialTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => BillOfMaterialTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  billOfMaterialTypes?: BillOfMaterialTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => BillOfMaterialUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => BillOfMaterialUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => BillOfMaterialUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  billOfMaterials?: BillOfMaterialUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CashRepositoryUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CashRepositoryUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CashRepositoryUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  cashRepositories?: CashRepositoryUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  creatorUserId?: string | null;

  @ApiProperty({
    required: false,
    type: () => CurrencyUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CurrencyUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CurrencyUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  currencies?: CurrencyUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CustomerUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CustomerUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CustomerUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  customers?: CustomerUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeClassUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeClassUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeClassUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeClasses?: EmployeeClassUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeDepartmentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDepartmentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeDepartmentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeDepartments?: EmployeeDepartmentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employees?: EmployeeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => InstallmentSaleFeeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => InstallmentSaleFeeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => InstallmentSaleFeeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  installmentSaleFees?: InstallmentSaleFeeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => InvoiceTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => InvoiceTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  invoiceTypes?: InvoiceTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastModifierUserIdl?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderStatusUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OrderStatusUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OrderStatusUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  orderStatuses?: OrderStatusUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentMethodUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PaymentMethodUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PaymentMethodUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  paymentMethods?: PaymentMethodUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentStatusUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PaymentStatusUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PaymentStatusUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  paymentStatuses?: PaymentStatusUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentTermUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PaymentTermUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PaymentTermUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  paymentTerms?: PaymentTermUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PaymentTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PaymentTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  paymentTypes?: PaymentTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PeriodUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PeriodUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PeriodUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  periods?: PeriodUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PrintTemplateContentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PrintTemplateContentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PrintTemplateContentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  printTemplateContents?: PrintTemplateContentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PrintTemplateGroupUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PrintTemplateGroupUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PrintTemplateGroupUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  printTemplateGroups?: PrintTemplateGroupUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PrintTemplateUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PrintTemplateUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PrintTemplateUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  printTemplates?: PrintTemplateUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductBarcodeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductBarcodeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductBarcodeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productBarcodes?: ProductBarcodeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductCategoryUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productCategories?: ProductCategoryUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductDepartmentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductDepartmentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductDepartmentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productDepartments?: ProductDepartmentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductGroupUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductGroupUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductGroupUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productGroups?: ProductGroupUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productTypes?: ProductTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductUnitUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductUnitUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductUnitUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productUnits?: ProductUnitUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductVariantUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductVariantUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductVariantUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productVariants?: ProductVariantUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductionAvailabilityUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductionAvailabilityUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductionAvailabilityUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productionAvailabilities?: ProductionAvailabilityUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductionDocumentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductionDocumentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductionDocumentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productionDocuments?: ProductionDocumentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductionOrderUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductionOrderUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductionOrderUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  productionOrders?: ProductionOrderUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ProductUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ProductUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ProductUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  products?: ProductUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseDetailUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PurchaseDetailUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PurchaseDetailUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  purchaseDetails?: PurchaseDetailUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PurchasePriceTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PurchasePriceTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PurchasePriceTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  purchasePriceTypes?: PurchasePriceTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseReturnDetailUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PurchaseReturnDetailUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PurchaseReturnDetailUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  purchaseReturnDetails?: PurchaseReturnDetailUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseReturnUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PurchaseReturnUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PurchaseReturnUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  purchaseReturns?: PurchaseReturnUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PurchaseUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PurchaseUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  purchases?: PurchaseUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ResourceTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ResourceTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ResourceTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  resourceTypes?: ResourceTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ResourceUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ResourceUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ResourceUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  resources?: ResourceUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => RoleGroupUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => RoleGroupUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => RoleGroupUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  roleGroups?: RoleGroupUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SalaryItemGroupUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SalaryItemGroupUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SalaryItemGroupUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  salaryItemGroups?: SalaryItemGroupUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SalaryItemTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SalaryItemTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SalaryItemTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  salaryItemTypes?: SalaryItemTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SalaryItemUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SalaryItemUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SalaryItemUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  salaryItems?: SalaryItemUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SalaryLawUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SalaryLawUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SalaryLawUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  salaryLaws?: SalaryLawUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleDetailUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleDetailUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleDetailUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleDetails?: SaleDetailUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleOrderDetailUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleOrderDetailUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleOrderDetailUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleOrderDetails?: SaleOrderDetailUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleOrderUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleOrderUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleOrderUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleOrders?: SaleOrderUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SalePaymentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SalePaymentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SalePaymentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  salePayments?: SalePaymentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SalePersonUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SalePersonUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SalePersonUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  salePeople?: SalePersonUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SalePriceTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SalePriceTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SalePriceTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  salePriceTypes?: SalePriceTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleQuotationDetailUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleQuotationDetailUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleQuotationDetailUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleQuotationDetails?: SaleQuotationDetailUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleQuotationUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleQuotationUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleQuotationUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleQuotations?: SaleQuotationUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleReturnDetailUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleReturnDetailUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleReturnDetailUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleReturnDetails?: SaleReturnDetailUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleReturnUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleReturnUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleReturnUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleReturns?: SaleReturnUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleTaxUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleTaxUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleTaxUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleTaxes?: SaleTaxUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleTeamUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleTeamUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleTeamUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  saleTeams?: SaleTeamUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SaleUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SaleUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SaleUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  sales?: SaleUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ScrapReasonUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ScrapReasonUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ScrapReasonUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  scrapReasons?: ScrapReasonUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ShippingStatusUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ShippingStatusUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ShippingStatusUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  shippingStatuses?: ShippingStatusUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => StoreUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => StoreUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => StoreUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  stores?: StoreUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => SupplierUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => SupplierUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => SupplierUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  suppliers?: SupplierUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tenancyName?: string;

  @ApiProperty({
    required: false,
    type: () => UnitUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => UnitUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => UnitUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  units?: UnitUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  users?: UserUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterRoutingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterRoutingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterRoutingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterRoutings?: WorkCenterRoutingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenters?: WorkCenterUpdateManyWithoutTenantsInput;
}

export { TenantUpdateInput as TenantUpdateInput };
