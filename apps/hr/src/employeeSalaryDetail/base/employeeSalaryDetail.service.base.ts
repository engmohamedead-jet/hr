/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  EmployeeSalaryDetail as PrismaEmployeeSalaryDetail,
  SalaryItem as PrismaSalaryItem,
} from "@prisma/client";

export class EmployeeSalaryDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmployeeSalaryDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.employeeSalaryDetail.count(args);
  }

  async employeeSalaryDetails(
    args: Prisma.EmployeeSalaryDetailFindManyArgs
  ): Promise<PrismaEmployeeSalaryDetail[]> {
    return this.prisma.employeeSalaryDetail.findMany(args);
  }
  async employeeSalaryDetail(
    args: Prisma.EmployeeSalaryDetailFindUniqueArgs
  ): Promise<PrismaEmployeeSalaryDetail | null> {
    return this.prisma.employeeSalaryDetail.findUnique(args);
  }
  async createEmployeeSalaryDetail(
    args: Prisma.EmployeeSalaryDetailCreateArgs
  ): Promise<PrismaEmployeeSalaryDetail> {
    return this.prisma.employeeSalaryDetail.create(args);
  }
  async updateEmployeeSalaryDetail(
    args: Prisma.EmployeeSalaryDetailUpdateArgs
  ): Promise<PrismaEmployeeSalaryDetail> {
    return this.prisma.employeeSalaryDetail.update(args);
  }
  async deleteEmployeeSalaryDetail(
    args: Prisma.EmployeeSalaryDetailDeleteArgs
  ): Promise<PrismaEmployeeSalaryDetail> {
    return this.prisma.employeeSalaryDetail.delete(args);
  }

  async getSalaryItemId(parentId: string): Promise<PrismaSalaryItem | null> {
    return this.prisma.employeeSalaryDetail
      .findUnique({
        where: { id: parentId },
      })
      .salaryItemId();
  }
}
