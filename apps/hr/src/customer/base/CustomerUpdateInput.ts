/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsNumber,
  Min,
  Max,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsDate,
  IsBoolean,
} from "class-validator";

import { Decimal } from "decimal.js";
import { CurrencyWhereUniqueInput } from "../../currency/base/CurrencyWhereUniqueInput";
import { Type } from "class-transformer";
import { ProductionOrderUpdateManyWithoutCustomersInput } from "./ProductionOrderUpdateManyWithoutCustomersInput";
import { ReceiptVoucherUpdateManyWithoutCustomersInput } from "./ReceiptVoucherUpdateManyWithoutCustomersInput";
import { SaleOrderUpdateManyWithoutCustomersInput } from "./SaleOrderUpdateManyWithoutCustomersInput";
import { SaleReturnUpdateManyWithoutCustomersInput } from "./SaleReturnUpdateManyWithoutCustomersInput";
import { SaleUpdateManyWithoutCustomersInput } from "./SaleUpdateManyWithoutCustomersInput";
import { SupplierUpdateManyWithoutCustomersInput } from "./SupplierUpdateManyWithoutCustomersInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class CustomerUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  DefaultSalePriceTypeId?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  credit?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => CurrencyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CurrencyWhereUniqueInput)
  @IsOptional()
  @Field(() => CurrencyWhereUniqueInput, {
    nullable: true,
  })
  currencyId?: CurrencyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  debit?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  firstBalance?: Decimal | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  firstBalanceDate?: Date | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isSystem?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isUnderRevision?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  maxAllowedDebit?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  previousBalance?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => ProductionOrderUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => ProductionOrderUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => ProductionOrderUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  productionOrders?: ProductionOrderUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => ReceiptVoucherUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => ReceiptVoucherUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => ReceiptVoucherUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  receiptVouchers?: ReceiptVoucherUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  revisionDate?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  saleDiscountRate?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => SaleOrderUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => SaleOrderUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => SaleOrderUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  saleOrders?: SaleOrderUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => SaleReturnUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => SaleReturnUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => SaleReturnUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  saleReturns?: SaleReturnUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => SaleUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => SaleUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => SaleUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  sales?: SaleUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  supplierId?: string | null;

  @ApiProperty({
    required: false,
    type: () => SupplierUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => SupplierUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => SupplierUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  suppliers?: SupplierUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  taxNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenant?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  website?: string | null;
}

export { CustomerUpdateInput as CustomerUpdateInput };
