/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { CustomerListRelationFilter } from "../../customer/base/CustomerListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { PaymentVoucherListRelationFilter } from "../../paymentVoucher/base/PaymentVoucherListRelationFilter";
import { ReceiptVoucherListRelationFilter } from "../../receiptVoucher/base/ReceiptVoucherListRelationFilter";
import { SalePaymentListRelationFilter } from "../../salePayment/base/SalePaymentListRelationFilter";
import { SupplierListRelationFilter } from "../../supplier/base/SupplierListRelationFilter";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class CurrencyWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CustomerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CustomerListRelationFilter)
  @IsOptional()
  @Field(() => CustomerListRelationFilter, {
    nullable: true,
  })
  customers?: CustomerListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isActive?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  normalizedName?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  note?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PaymentVoucherListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentVoucherListRelationFilter)
  @IsOptional()
  @Field(() => PaymentVoucherListRelationFilter, {
    nullable: true,
  })
  paymentVouchers?: PaymentVoucherListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReceiptVoucherListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReceiptVoucherListRelationFilter)
  @IsOptional()
  @Field(() => ReceiptVoucherListRelationFilter, {
    nullable: true,
  })
  receiptVouchers?: ReceiptVoucherListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SalePaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SalePaymentListRelationFilter)
  @IsOptional()
  @Field(() => SalePaymentListRelationFilter, {
    nullable: true,
  })
  salePayments?: SalePaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SupplierListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SupplierListRelationFilter)
  @IsOptional()
  @Field(() => SupplierListRelationFilter, {
    nullable: true,
  })
  suppliers?: SupplierListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput;
}

export { CurrencyWhereInput as CurrencyWhereInput };
