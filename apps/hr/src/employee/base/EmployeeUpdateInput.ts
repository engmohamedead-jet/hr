/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttendanceUpdateManyWithoutEmployeesInput } from "./AttendanceUpdateManyWithoutEmployeesInput";

import {
  ValidateNested,
  IsOptional,
  IsNumber,
  Max,
  IsString,
  MaxLength,
  IsDate,
  IsBoolean,
} from "class-validator";

import { Type } from "class-transformer";
import { Decimal } from "decimal.js";
import { BonusRequestUpdateManyWithoutEmployeesInput } from "./BonusRequestUpdateManyWithoutEmployeesInput";
import { CheckInOutUpdateManyWithoutEmployeesInput } from "./CheckInOutUpdateManyWithoutEmployeesInput";
import { DailyMovementRequestUpdateManyWithoutEmployeesInput } from "./DailyMovementRequestUpdateManyWithoutEmployeesInput";
import { DayOffRequestUpdateManyWithoutEmployeesInput } from "./DayOffRequestUpdateManyWithoutEmployeesInput";
import { EmployeeDepartmentWhereUniqueInput } from "../../employeeDepartment/base/EmployeeDepartmentWhereUniqueInput";
import { EmployeeGroupWhereUniqueInput } from "../../employeeGroup/base/EmployeeGroupWhereUniqueInput";
import { EmployeeRoleWhereUniqueInput } from "../../employeeRole/base/EmployeeRoleWhereUniqueInput";
import { JobTitleWhereUniqueInput } from "../../jobTitle/base/JobTitleWhereUniqueInput";
import { LeaveRequestUpdateManyWithoutEmployeesInput } from "./LeaveRequestUpdateManyWithoutEmployeesInput";
import { OverNightRequestUpdateManyWithoutEmployeesInput } from "./OverNightRequestUpdateManyWithoutEmployeesInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class EmployeeUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AttendanceUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => AttendanceUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => AttendanceUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  attendances?: AttendanceUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  balance?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => BonusRequestUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => BonusRequestUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => BonusRequestUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  bonusRequests?: BonusRequestUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => CheckInOutUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => CheckInOutUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => CheckInOutUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  checkInOuts?: CheckInOutUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: () => DailyMovementRequestUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => DailyMovementRequestUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => DailyMovementRequestUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  dailyMovementRequests?: DailyMovementRequestUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => DayOffRequestUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => DayOffRequestUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => DayOffRequestUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  dayOffRequests?: DayOffRequestUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeDepartmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDepartmentWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeeDepartmentWhereUniqueInput, {
    nullable: true,
  })
  employeeDepartmentId?: EmployeeDepartmentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeGroupWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeeGroupWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeeGroupWhereUniqueInput, {
    nullable: true,
  })
  employeeGroup?: EmployeeGroupWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeRoleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeeRoleWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeeRoleWhereUniqueInput, {
    nullable: true,
  })
  employeeRoleId?: EmployeeRoleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  hireDate?: Date | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: () => JobTitleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobTitleWhereUniqueInput)
  @IsOptional()
  @Field(() => JobTitleWhereUniqueInput, {
    nullable: true,
  })
  jobTitle?: JobTitleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  lastYearBalance?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => LeaveRequestUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => LeaveRequestUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => LeaveRequestUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  leavingPermissionRequests?: LeaveRequestUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => OverNightRequestUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => OverNightRequestUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => OverNightRequestUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  overNightRequests?: OverNightRequestUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  remainingBalance?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  usedBalance?: Decimal | null;
}

export { EmployeeUpdateInput as EmployeeUpdateInput };
