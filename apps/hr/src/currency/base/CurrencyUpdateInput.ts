/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountUpdateManyWithoutCurrenciesInput } from "./AccountUpdateManyWithoutCurrenciesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { CustomerUpdateManyWithoutCurrenciesInput } from "./CustomerUpdateManyWithoutCurrenciesInput";
import { ExchangeRateDetailUpdateManyWithoutCurrenciesInput } from "./ExchangeRateDetailUpdateManyWithoutCurrenciesInput";
import { ExchangeRateDetailWhereUniqueInput } from "../../exchangeRateDetail/base/ExchangeRateDetailWhereUniqueInput";
import { SupplierUpdateManyWithoutCurrenciesInput } from "./SupplierUpdateManyWithoutCurrenciesInput";

@InputType()
class CurrencyUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AccountUpdateManyWithoutCurrenciesInput,
  })
  @ValidateNested()
  @Type(() => AccountUpdateManyWithoutCurrenciesInput)
  @IsOptional()
  @Field(() => AccountUpdateManyWithoutCurrenciesInput, {
    nullable: true,
  })
  accounts?: AccountUpdateManyWithoutCurrenciesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(100)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: () => CustomerUpdateManyWithoutCurrenciesInput,
  })
  @ValidateNested()
  @Type(() => CustomerUpdateManyWithoutCurrenciesInput)
  @IsOptional()
  @Field(() => CustomerUpdateManyWithoutCurrenciesInput, {
    nullable: true,
  })
  customers?: CustomerUpdateManyWithoutCurrenciesInput;

  @ApiProperty({
    required: false,
    type: () => ExchangeRateDetailUpdateManyWithoutCurrenciesInput,
  })
  @ValidateNested()
  @Type(() => ExchangeRateDetailUpdateManyWithoutCurrenciesInput)
  @IsOptional()
  @Field(() => ExchangeRateDetailUpdateManyWithoutCurrenciesInput, {
    nullable: true,
  })
  exchangeRateDetails?: ExchangeRateDetailUpdateManyWithoutCurrenciesInput;

  @ApiProperty({
    required: false,
    type: () => ExchangeRateDetailWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ExchangeRateDetailWhereUniqueInput)
  @IsOptional()
  @Field(() => ExchangeRateDetailWhereUniqueInput, {
    nullable: true,
  })
  foreignCurrencyName?: ExchangeRateDetailWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(300)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hundredthName?: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDefault?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(300)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(300)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => SupplierUpdateManyWithoutCurrenciesInput,
  })
  @ValidateNested()
  @Type(() => SupplierUpdateManyWithoutCurrenciesInput)
  @IsOptional()
  @Field(() => SupplierUpdateManyWithoutCurrenciesInput, {
    nullable: true,
  })
  suppliers?: SupplierUpdateManyWithoutCurrenciesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(100)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  symbolField?: string;
}

export { CurrencyUpdateInput as CurrencyUpdateInput };
