/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Debit as PrismaDebit } from "@prisma/client";

export class DebitServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DebitCountArgs, "select">): Promise<number> {
    return this.prisma.debit.count(args);
  }

  async debits(args: Prisma.DebitFindManyArgs): Promise<PrismaDebit[]> {
    return this.prisma.debit.findMany(args);
  }
  async debit(args: Prisma.DebitFindUniqueArgs): Promise<PrismaDebit | null> {
    return this.prisma.debit.findUnique(args);
  }
  async createDebit(args: Prisma.DebitCreateArgs): Promise<PrismaDebit> {
    return this.prisma.debit.create(args);
  }
  async updateDebit(args: Prisma.DebitUpdateArgs): Promise<PrismaDebit> {
    return this.prisma.debit.update(args);
  }
  async deleteDebit(args: Prisma.DebitDeleteArgs): Promise<PrismaDebit> {
    return this.prisma.debit.delete(args);
  }
}
