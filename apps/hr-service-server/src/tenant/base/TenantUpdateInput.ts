/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttendanceUpdateManyWithoutTenantsInput } from "./AttendanceUpdateManyWithoutTenantsInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { BonusRequestUpdateManyWithoutTenantsInput } from "./BonusRequestUpdateManyWithoutTenantsInput";
import { CheckInOutUpdateManyWithoutTenantsInput } from "./CheckInOutUpdateManyWithoutTenantsInput";
import { DailyMovementRequestUpdateManyWithoutTenantsInput } from "./DailyMovementRequestUpdateManyWithoutTenantsInput";
import { DayOffRequestUpdateManyWithoutTenantsInput } from "./DayOffRequestUpdateManyWithoutTenantsInput";
import { EmployeeDepartmentUpdateManyWithoutTenantsInput } from "./EmployeeDepartmentUpdateManyWithoutTenantsInput";
import { EmployeeGroupUpdateManyWithoutTenantsInput } from "./EmployeeGroupUpdateManyWithoutTenantsInput";
import { EmployeeRoleUpdateManyWithoutTenantsInput } from "./EmployeeRoleUpdateManyWithoutTenantsInput";
import { EmployeeUpdateManyWithoutTenantsInput } from "./EmployeeUpdateManyWithoutTenantsInput";
import { MachineUpdateManyWithoutTenantsInput } from "./MachineUpdateManyWithoutTenantsInput";
import { FiscalMonthUpdateManyWithoutTenantsInput } from "./FiscalMonthUpdateManyWithoutTenantsInput";
import { JobTitleUpdateManyWithoutTenantsInput } from "./JobTitleUpdateManyWithoutTenantsInput";
import { LeaveRequestTypeUpdateManyWithoutTenantsInput } from "./LeaveRequestTypeUpdateManyWithoutTenantsInput";
import { LeaveRequestUpdateManyWithoutTenantsInput } from "./LeaveRequestUpdateManyWithoutTenantsInput";
import { OverNightRequestUpdateManyWithoutTenantsInput } from "./OverNightRequestUpdateManyWithoutTenantsInput";
import { ScrapReasonUpdateManyWithoutTenantsInput } from "./ScrapReasonUpdateManyWithoutTenantsInput";
import { TradingSummaryUpdateManyWithoutTenantsInput } from "./TradingSummaryUpdateManyWithoutTenantsInput";
import { WorkCenterAlternativeUpdateManyWithoutTenantsInput } from "./WorkCenterAlternativeUpdateManyWithoutTenantsInput";
import { WorkCenterCapacityUpdateManyWithoutTenantsInput } from "./WorkCenterCapacityUpdateManyWithoutTenantsInput";
import { WorkCenterProductivityUpdateManyWithoutTenantsInput } from "./WorkCenterProductivityUpdateManyWithoutTenantsInput";
import { WorkCenterProductivityLossTypeUpdateManyWithoutTenantsInput } from "./WorkCenterProductivityLossTypeUpdateManyWithoutTenantsInput";
import { WorkCenterProductivityLossUpdateManyWithoutTenantsInput } from "./WorkCenterProductivityLossUpdateManyWithoutTenantsInput";
import { WorkCenterRoutingUpdateManyWithoutTenantsInput } from "./WorkCenterRoutingUpdateManyWithoutTenantsInput";
import { WorkCenterTagUpdateManyWithoutTenantsInput } from "./WorkCenterTagUpdateManyWithoutTenantsInput";
import { WorkCenterWorkCenterTagUpdateManyWithoutTenantsInput } from "./WorkCenterWorkCenterTagUpdateManyWithoutTenantsInput";
import { WorkCenterUpdateManyWithoutTenantsInput } from "./WorkCenterUpdateManyWithoutTenantsInput";
import { WorkOrderDependencyUpdateManyWithoutTenantsInput } from "./WorkOrderDependencyUpdateManyWithoutTenantsInput";
import { WorkOrderRoutingUpdateManyWithoutTenantsInput } from "./WorkOrderRoutingUpdateManyWithoutTenantsInput";
import { WorkOrderStatusUpdateManyWithoutTenantsInput } from "./WorkOrderStatusUpdateManyWithoutTenantsInput";
import { WorkOrderUpdateManyWithoutTenantsInput } from "./WorkOrderUpdateManyWithoutTenantsInput";
import { WorkSheetTypeUpdateManyWithoutTenantsInput } from "./WorkSheetTypeUpdateManyWithoutTenantsInput";

@InputType()
class TenantUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AttendanceUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => AttendanceUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  attendances?: AttendanceUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => BonusRequestUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => BonusRequestUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => BonusRequestUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  bonusRequests?: BonusRequestUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CheckInOutUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CheckInOutUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CheckInOutUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  checkInOuts?: CheckInOutUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => DailyMovementRequestUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => DailyMovementRequestUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => DailyMovementRequestUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  dailyMovements?: DailyMovementRequestUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => DayOffRequestUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => DayOffRequestUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => DayOffRequestUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  dayOffs?: DayOffRequestUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeDepartmentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDepartmentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeDepartmentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeDepartments?: EmployeeDepartmentUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeGroupUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeGroupUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeGroupUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeGroups?: EmployeeGroupUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeRoleUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeRoleUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeRoleUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeRoles?: EmployeeRoleUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  employees?: EmployeeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => MachineUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => MachineUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => MachineUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  fingerprintMachines?: MachineUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => FiscalMonthUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => FiscalMonthUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => FiscalMonthUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  fiscalMonths?: FiscalMonthUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => JobTitleUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => JobTitleUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => JobTitleUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  jobTitles?: JobTitleUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => LeaveRequestTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => LeaveRequestTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => LeaveRequestTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  leaveRequestTypes?: LeaveRequestTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => LeaveRequestUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => LeaveRequestUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => LeaveRequestUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  leaveRequests?: LeaveRequestUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OverNightRequestUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OverNightRequestUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OverNightRequestUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  overNights?: OverNightRequestUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => ScrapReasonUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ScrapReasonUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ScrapReasonUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  scrapReasons?: ScrapReasonUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => TradingSummaryUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => TradingSummaryUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => TradingSummaryUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  tradingSummaries?: TradingSummaryUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterAlternativeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterAlternativeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterAlternativeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterAlternatives?: WorkCenterAlternativeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterCapacityUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterCapacityUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterCapacityUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterCapacities?: WorkCenterCapacityUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterProductivityUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterProductivityUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterProductivities?: WorkCenterProductivityUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterProductivityLossTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityLossTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterProductivityLossTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterProductivityLossTypes?: WorkCenterProductivityLossTypeUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterProductivityLossUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityLossUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterProductivityLossUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterProductivityLosses?: WorkCenterProductivityLossUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterRoutingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterRoutingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterRoutingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterRoutings?: WorkCenterRoutingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterTagUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterTagUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterTagUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterTags?: WorkCenterTagUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterWorkCenterTagUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterWorkCenterTagUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterWorkCenterTagUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenterWorkCenterTags?: WorkCenterWorkCenterTagUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkCenterUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workCenters?: WorkCenterUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkOrderDependencyUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkOrderDependencyUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkOrderDependencyUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workOrderDependencies?: WorkOrderDependencyUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkOrderRoutingUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkOrderRoutingUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkOrderRoutingUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workOrderRoutings?: WorkOrderRoutingUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkOrderStatusUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkOrderStatusUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkOrderStatusUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workOrderStatuses?: WorkOrderStatusUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkOrderUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkOrderUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkOrderUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workOrders?: WorkOrderUpdateManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => WorkSheetTypeUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => WorkSheetTypeUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => WorkSheetTypeUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  workSheetTypes?: WorkSheetTypeUpdateManyWithoutTenantsInput;
}

export { TenantUpdateInput as TenantUpdateInput };
