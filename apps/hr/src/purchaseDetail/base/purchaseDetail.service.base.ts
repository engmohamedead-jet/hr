/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PurchaseDetail as PrismaPurchaseDetail,
  Product as PrismaProduct,
  ProductVariant as PrismaProductVariant,
  Purchase as PrismaPurchase,
  PurchasePriceType as PrismaPurchasePriceType,
  Tenant as PrismaTenant,
  Unit as PrismaUnit,
} from "@prisma/client";

export class PurchaseDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PurchaseDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.purchaseDetail.count(args);
  }

  async purchaseDetails(
    args: Prisma.PurchaseDetailFindManyArgs
  ): Promise<PrismaPurchaseDetail[]> {
    return this.prisma.purchaseDetail.findMany(args);
  }
  async purchaseDetail(
    args: Prisma.PurchaseDetailFindUniqueArgs
  ): Promise<PrismaPurchaseDetail | null> {
    return this.prisma.purchaseDetail.findUnique(args);
  }
  async createPurchaseDetail(
    args: Prisma.PurchaseDetailCreateArgs
  ): Promise<PrismaPurchaseDetail> {
    return this.prisma.purchaseDetail.create(args);
  }
  async updatePurchaseDetail(
    args: Prisma.PurchaseDetailUpdateArgs
  ): Promise<PrismaPurchaseDetail> {
    return this.prisma.purchaseDetail.update(args);
  }
  async deletePurchaseDetail(
    args: Prisma.PurchaseDetailDeleteArgs
  ): Promise<PrismaPurchaseDetail> {
    return this.prisma.purchaseDetail.delete(args);
  }

  async getProductId(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.purchaseDetail
      .findUnique({
        where: { id: parentId },
      })
      .productId();
  }

  async getProductVariantId(
    parentId: string
  ): Promise<PrismaProductVariant | null> {
    return this.prisma.purchaseDetail
      .findUnique({
        where: { id: parentId },
      })
      .productVariantId();
  }

  async getPurchaseId(parentId: string): Promise<PrismaPurchase | null> {
    return this.prisma.purchaseDetail
      .findUnique({
        where: { id: parentId },
      })
      .purchaseId();
  }

  async getPurchasePriceTypeId(
    parentId: string
  ): Promise<PrismaPurchasePriceType | null> {
    return this.prisma.purchaseDetail
      .findUnique({
        where: { id: parentId },
      })
      .purchasePriceTypeId();
  }

  async getTenantId(parentId: string): Promise<PrismaTenant | null> {
    return this.prisma.purchaseDetail
      .findUnique({
        where: { id: parentId },
      })
      .tenantId();
  }

  async getUnitId(parentId: string): Promise<PrismaUnit | null> {
    return this.prisma.purchaseDetail
      .findUnique({
        where: { id: parentId },
      })
      .unitId();
  }
}
