/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  EmployeeRole as PrismaEmployeeRole,
  Employee as PrismaEmployee,
  Tenant as PrismaTenant,
} from "@prisma/client";

export class EmployeeRoleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmployeeRoleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.employeeRole.count(args);
  }

  async employeeRoles(
    args: Prisma.EmployeeRoleFindManyArgs
  ): Promise<PrismaEmployeeRole[]> {
    return this.prisma.employeeRole.findMany(args);
  }
  async employeeRole(
    args: Prisma.EmployeeRoleFindUniqueArgs
  ): Promise<PrismaEmployeeRole | null> {
    return this.prisma.employeeRole.findUnique(args);
  }
  async createEmployeeRole(
    args: Prisma.EmployeeRoleCreateArgs
  ): Promise<PrismaEmployeeRole> {
    return this.prisma.employeeRole.create(args);
  }
  async updateEmployeeRole(
    args: Prisma.EmployeeRoleUpdateArgs
  ): Promise<PrismaEmployeeRole> {
    return this.prisma.employeeRole.update(args);
  }
  async deleteEmployeeRole(
    args: Prisma.EmployeeRoleDeleteArgs
  ): Promise<PrismaEmployeeRole> {
    return this.prisma.employeeRole.delete(args);
  }

  async findEmployees(
    parentId: string,
    args: Prisma.EmployeeFindManyArgs
  ): Promise<PrismaEmployee[]> {
    return this.prisma.employeeRole
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .employees(args);
  }

  async getTenantId(parentId: string): Promise<PrismaTenant | null> {
    return this.prisma.employeeRole
      .findUnique({
        where: { id: parentId },
      })
      .tenantId();
  }
}
