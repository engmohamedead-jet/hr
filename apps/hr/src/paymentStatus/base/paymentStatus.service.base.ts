/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PaymentStatus as PrismaPaymentStatus } from "@prisma/client";

export class PaymentStatusServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentStatusCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentStatus.count(args);
  }

  async paymentStatuses(
    args: Prisma.PaymentStatusFindManyArgs
  ): Promise<PrismaPaymentStatus[]> {
    return this.prisma.paymentStatus.findMany(args);
  }
  async paymentStatus(
    args: Prisma.PaymentStatusFindUniqueArgs
  ): Promise<PrismaPaymentStatus | null> {
    return this.prisma.paymentStatus.findUnique(args);
  }
  async createPaymentStatus(
    args: Prisma.PaymentStatusCreateArgs
  ): Promise<PrismaPaymentStatus> {
    return this.prisma.paymentStatus.create(args);
  }
  async updatePaymentStatus(
    args: Prisma.PaymentStatusUpdateArgs
  ): Promise<PrismaPaymentStatus> {
    return this.prisma.paymentStatus.update(args);
  }
  async deletePaymentStatus(
    args: Prisma.PaymentStatusDeleteArgs
  ): Promise<PrismaPaymentStatus> {
    return this.prisma.paymentStatus.delete(args);
  }
}
