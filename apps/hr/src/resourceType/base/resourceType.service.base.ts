/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ResourceType as PrismaResourceType,
  Resource as PrismaResource,
  Tenant as PrismaTenant,
} from "@prisma/client";

export class ResourceTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ResourceTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.resourceType.count(args);
  }

  async resourceTypes(
    args: Prisma.ResourceTypeFindManyArgs
  ): Promise<PrismaResourceType[]> {
    return this.prisma.resourceType.findMany(args);
  }
  async resourceType(
    args: Prisma.ResourceTypeFindUniqueArgs
  ): Promise<PrismaResourceType | null> {
    return this.prisma.resourceType.findUnique(args);
  }
  async createResourceType(
    args: Prisma.ResourceTypeCreateArgs
  ): Promise<PrismaResourceType> {
    return this.prisma.resourceType.create(args);
  }
  async updateResourceType(
    args: Prisma.ResourceTypeUpdateArgs
  ): Promise<PrismaResourceType> {
    return this.prisma.resourceType.update(args);
  }
  async deleteResourceType(
    args: Prisma.ResourceTypeDeleteArgs
  ): Promise<PrismaResourceType> {
    return this.prisma.resourceType.delete(args);
  }

  async findResources(
    parentId: number,
    args: Prisma.ResourceFindManyArgs
  ): Promise<PrismaResource[]> {
    return this.prisma.resourceType
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .resources(args);
  }

  async getTenantId(parentId: number): Promise<PrismaTenant | null> {
    return this.prisma.resourceType
      .findUnique({
        where: { id: parentId },
      })
      .tenantId();
  }
}
