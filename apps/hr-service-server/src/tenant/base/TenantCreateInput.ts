/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttendanceCreateNestedManyWithoutTenantsInput } from "./AttendanceCreateNestedManyWithoutTenantsInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { BonusRequestCreateNestedManyWithoutTenantsInput } from "./BonusRequestCreateNestedManyWithoutTenantsInput";
import { CheckInOutCreateNestedManyWithoutTenantsInput } from "./CheckInOutCreateNestedManyWithoutTenantsInput";
import { DailyMovementRequestCreateNestedManyWithoutTenantsInput } from "./DailyMovementRequestCreateNestedManyWithoutTenantsInput";
import { DayOffRequestCreateNestedManyWithoutTenantsInput } from "./DayOffRequestCreateNestedManyWithoutTenantsInput";
import { EmployeeDepartmentCreateNestedManyWithoutTenantsInput } from "./EmployeeDepartmentCreateNestedManyWithoutTenantsInput";
import { EmployeeGroupCreateNestedManyWithoutTenantsInput } from "./EmployeeGroupCreateNestedManyWithoutTenantsInput";
import { EmployeeRoleCreateNestedManyWithoutTenantsInput } from "./EmployeeRoleCreateNestedManyWithoutTenantsInput";
import { EmployeeCreateNestedManyWithoutTenantsInput } from "./EmployeeCreateNestedManyWithoutTenantsInput";
import { MachineCreateNestedManyWithoutTenantsInput } from "./MachineCreateNestedManyWithoutTenantsInput";
import { FiscalMonthCreateNestedManyWithoutTenantsInput } from "./FiscalMonthCreateNestedManyWithoutTenantsInput";
import { JobTitleCreateNestedManyWithoutTenantsInput } from "./JobTitleCreateNestedManyWithoutTenantsInput";
import { LeaveRequestTypeCreateNestedManyWithoutTenantsInput } from "./LeaveRequestTypeCreateNestedManyWithoutTenantsInput";
import { LeaveRequestCreateNestedManyWithoutTenantsInput } from "./LeaveRequestCreateNestedManyWithoutTenantsInput";
import { OverNightRequestCreateNestedManyWithoutTenantsInput } from "./OverNightRequestCreateNestedManyWithoutTenantsInput";

@InputType()
class TenantCreateInput {
  @ApiProperty({
    required: false,
    type: () => AttendanceCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => AttendanceCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  attendances?: AttendanceCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => BonusRequestCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => BonusRequestCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => BonusRequestCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  bonusRequests?: BonusRequestCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => CheckInOutCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => CheckInOutCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => CheckInOutCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  checkInOuts?: CheckInOutCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => DailyMovementRequestCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => DailyMovementRequestCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => DailyMovementRequestCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  dailyMovements?: DailyMovementRequestCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => DayOffRequestCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => DayOffRequestCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => DayOffRequestCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  dayOffs?: DayOffRequestCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeDepartmentCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDepartmentCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeDepartmentCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeDepartments?: EmployeeDepartmentCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeGroupCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeGroupCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeGroupCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeGroups?: EmployeeGroupCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeRoleCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeRoleCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeRoleCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  employeeRoles?: EmployeeRoleCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => EmployeeCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  employees?: EmployeeCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => MachineCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => MachineCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => MachineCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  fingerprintMachines?: MachineCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => FiscalMonthCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => FiscalMonthCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => FiscalMonthCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  fiscalMonths?: FiscalMonthCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => JobTitleCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => JobTitleCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => JobTitleCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  jobTitles?: JobTitleCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => LeaveRequestTypeCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => LeaveRequestTypeCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => LeaveRequestTypeCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  leaveRequestTypes?: LeaveRequestTypeCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => LeaveRequestCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => LeaveRequestCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => LeaveRequestCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  leaveRequests?: LeaveRequestCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => OverNightRequestCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => OverNightRequestCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => OverNightRequestCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  overNights?: OverNightRequestCreateNestedManyWithoutTenantsInput;
}

export { TenantCreateInput as TenantCreateInput };
