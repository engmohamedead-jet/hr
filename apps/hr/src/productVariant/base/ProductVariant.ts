/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttributeValue } from "../../attributeValue/base/AttributeValue";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { BillOfMaterialDetail } from "../../billOfMaterialDetail/base/BillOfMaterialDetail";
import { BillOfMaterial } from "../../billOfMaterial/base/BillOfMaterial";
import { ProductBarcode } from "../../productBarcode/base/ProductBarcode";
import { Product } from "../../product/base/Product";

@ObjectType()
class ProductVariant {
  @ApiProperty({
    required: true,
    type: () => AttributeValue,
  })
  @ValidateNested()
  @Type(() => AttributeValue)
  attributeValueId?: AttributeValue;

  @ApiProperty({
    required: false,
    type: () => [BillOfMaterialDetail],
  })
  @ValidateNested()
  @Type(() => BillOfMaterialDetail)
  @IsOptional()
  billOfMaterialDetails?: Array<BillOfMaterialDetail>;

  @ApiProperty({
    required: false,
    type: () => [BillOfMaterial],
  })
  @ValidateNested()
  @Type(() => BillOfMaterial)
  @IsOptional()
  billOfMaterials?: Array<BillOfMaterial>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note!: string | null;

  @ApiProperty({
    required: false,
    type: () => [ProductBarcode],
  })
  @ValidateNested()
  @Type(() => ProductBarcode)
  @IsOptional()
  productBarcodes?: Array<ProductBarcode>;

  @ApiProperty({
    required: true,
    type: () => Product,
  })
  @ValidateNested()
  @Type(() => Product)
  productId?: Product;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { ProductVariant as ProductVariant };
