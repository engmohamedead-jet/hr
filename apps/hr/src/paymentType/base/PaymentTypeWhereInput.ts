/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { IntFilter } from "../../util/IntFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { StringFilter } from "../../util/StringFilter";
import { PurchaseReturnListRelationFilter } from "../../purchaseReturn/base/PurchaseReturnListRelationFilter";
import { PurchaseListRelationFilter } from "../../purchase/base/PurchaseListRelationFilter";
import { SaleReturnListRelationFilter } from "../../saleReturn/base/SaleReturnListRelationFilter";
import { SaleListRelationFilter } from "../../sale/base/SaleListRelationFilter";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class PaymentTypeWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isActive?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isDefault?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  normalizedName?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  note?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PurchaseReturnListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PurchaseReturnListRelationFilter)
  @IsOptional()
  @Field(() => PurchaseReturnListRelationFilter, {
    nullable: true,
  })
  purchaseReturns?: PurchaseReturnListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PurchaseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PurchaseListRelationFilter)
  @IsOptional()
  @Field(() => PurchaseListRelationFilter, {
    nullable: true,
  })
  purchases?: PurchaseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SaleReturnListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SaleReturnListRelationFilter)
  @IsOptional()
  @Field(() => SaleReturnListRelationFilter, {
    nullable: true,
  })
  saleReturns?: SaleReturnListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SaleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SaleListRelationFilter)
  @IsOptional()
  @Field(() => SaleListRelationFilter, {
    nullable: true,
  })
  sales?: SaleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput;
}

export { PaymentTypeWhereInput as PaymentTypeWhereInput };
