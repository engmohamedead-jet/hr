/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  EmployeeClassSalaryItemValue as PrismaEmployeeClassSalaryItemValue,
  EmployeeClass as PrismaEmployeeClass,
  SalaryItem as PrismaSalaryItem,
} from "@prisma/client";

export class EmployeeClassSalaryItemValueServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmployeeClassSalaryItemValueCountArgs, "select">
  ): Promise<number> {
    return this.prisma.employeeClassSalaryItemValue.count(args);
  }

  async employeeClassSalaryItemValues(
    args: Prisma.EmployeeClassSalaryItemValueFindManyArgs
  ): Promise<PrismaEmployeeClassSalaryItemValue[]> {
    return this.prisma.employeeClassSalaryItemValue.findMany(args);
  }
  async employeeClassSalaryItemValue(
    args: Prisma.EmployeeClassSalaryItemValueFindUniqueArgs
  ): Promise<PrismaEmployeeClassSalaryItemValue | null> {
    return this.prisma.employeeClassSalaryItemValue.findUnique(args);
  }
  async createEmployeeClassSalaryItemValue(
    args: Prisma.EmployeeClassSalaryItemValueCreateArgs
  ): Promise<PrismaEmployeeClassSalaryItemValue> {
    return this.prisma.employeeClassSalaryItemValue.create(args);
  }
  async updateEmployeeClassSalaryItemValue(
    args: Prisma.EmployeeClassSalaryItemValueUpdateArgs
  ): Promise<PrismaEmployeeClassSalaryItemValue> {
    return this.prisma.employeeClassSalaryItemValue.update(args);
  }
  async deleteEmployeeClassSalaryItemValue(
    args: Prisma.EmployeeClassSalaryItemValueDeleteArgs
  ): Promise<PrismaEmployeeClassSalaryItemValue> {
    return this.prisma.employeeClassSalaryItemValue.delete(args);
  }

  async getEmployeeClassId(
    parentId: string
  ): Promise<PrismaEmployeeClass | null> {
    return this.prisma.employeeClassSalaryItemValue
      .findUnique({
        where: { id: parentId },
      })
      .employeeClassId();
  }

  async getSalaryItemId(parentId: string): Promise<PrismaSalaryItem | null> {
    return this.prisma.employeeClassSalaryItemValue
      .findUnique({
        where: { id: parentId },
      })
      .salaryItemId();
  }
}
