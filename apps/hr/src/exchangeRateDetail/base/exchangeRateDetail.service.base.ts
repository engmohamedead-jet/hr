/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ExchangeRateDetail as PrismaExchangeRateDetail,
  Currency as PrismaCurrency,
} from "@prisma/client";

export class ExchangeRateDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ExchangeRateDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.exchangeRateDetail.count(args);
  }

  async exchangeRateDetails(
    args: Prisma.ExchangeRateDetailFindManyArgs
  ): Promise<PrismaExchangeRateDetail[]> {
    return this.prisma.exchangeRateDetail.findMany(args);
  }
  async exchangeRateDetail(
    args: Prisma.ExchangeRateDetailFindUniqueArgs
  ): Promise<PrismaExchangeRateDetail | null> {
    return this.prisma.exchangeRateDetail.findUnique(args);
  }
  async createExchangeRateDetail(
    args: Prisma.ExchangeRateDetailCreateArgs
  ): Promise<PrismaExchangeRateDetail> {
    return this.prisma.exchangeRateDetail.create(args);
  }
  async updateExchangeRateDetail(
    args: Prisma.ExchangeRateDetailUpdateArgs
  ): Promise<PrismaExchangeRateDetail> {
    return this.prisma.exchangeRateDetail.update(args);
  }
  async deleteExchangeRateDetail(
    args: Prisma.ExchangeRateDetailDeleteArgs
  ): Promise<PrismaExchangeRateDetail> {
    return this.prisma.exchangeRateDetail.delete(args);
  }

  async getForeignCurrencyId(parentId: string): Promise<PrismaCurrency | null> {
    return this.prisma.exchangeRateDetail
      .findUnique({
        where: { id: parentId },
      })
      .foreignCurrencyId();
  }

  async getLocalCurrencyId(parentId: string): Promise<PrismaCurrency | null> {
    return this.prisma.exchangeRateDetail
      .findUnique({
        where: { id: parentId },
      })
      .localCurrencyId();
  }
}
