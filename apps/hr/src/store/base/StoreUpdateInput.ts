/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { ProductionOrderUpdateManyWithoutStoresInput } from "./ProductionOrderUpdateManyWithoutStoresInput";
import { Type } from "class-transformer";
import { ProductUpdateManyWithoutStoresInput } from "./ProductUpdateManyWithoutStoresInput";
import { PurchaseReturnUpdateManyWithoutStoresInput } from "./PurchaseReturnUpdateManyWithoutStoresInput";
import { PurchaseUpdateManyWithoutStoresInput } from "./PurchaseUpdateManyWithoutStoresInput";
import { SaleReturnUpdateManyWithoutStoresInput } from "./SaleReturnUpdateManyWithoutStoresInput";
import { SaleUpdateManyWithoutStoresInput } from "./SaleUpdateManyWithoutStoresInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class StoreUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine1?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  allowSale?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  cellPhoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fax?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  homePhoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(100)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProductionOrderUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => ProductionOrderUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => ProductionOrderUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  productionOrders?: ProductionOrderUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: () => ProductUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => ProductUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => ProductUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  products?: ProductUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseReturnUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => PurchaseReturnUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => PurchaseReturnUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  purchaseReturns?: PurchaseReturnUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => PurchaseUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => PurchaseUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  purchases?: PurchaseUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: () => SaleReturnUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => SaleReturnUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => SaleReturnUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  saleReturns?: SaleReturnUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: () => SaleUpdateManyWithoutStoresInput,
  })
  @ValidateNested()
  @Type(() => SaleUpdateManyWithoutStoresInput)
  @IsOptional()
  @Field(() => SaleUpdateManyWithoutStoresInput, {
    nullable: true,
  })
  sales?: SaleUpdateManyWithoutStoresInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  street?: string | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;
}

export { StoreUpdateInput as StoreUpdateInput };
