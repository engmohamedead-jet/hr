/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HrSpecialist as PrismaHrSpecialist } from "@prisma/client";

export class HrSpecialistServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HrSpecialistCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hrSpecialist.count(args);
  }

  async hrSpecialists(
    args: Prisma.HrSpecialistFindManyArgs
  ): Promise<PrismaHrSpecialist[]> {
    return this.prisma.hrSpecialist.findMany(args);
  }
  async hrSpecialist(
    args: Prisma.HrSpecialistFindUniqueArgs
  ): Promise<PrismaHrSpecialist | null> {
    return this.prisma.hrSpecialist.findUnique(args);
  }
  async createHrSpecialist(
    args: Prisma.HrSpecialistCreateArgs
  ): Promise<PrismaHrSpecialist> {
    return this.prisma.hrSpecialist.create(args);
  }
  async updateHrSpecialist(
    args: Prisma.HrSpecialistUpdateArgs
  ): Promise<PrismaHrSpecialist> {
    return this.prisma.hrSpecialist.update(args);
  }
  async deleteHrSpecialist(
    args: Prisma.HrSpecialistDeleteArgs
  ): Promise<PrismaHrSpecialist> {
    return this.prisma.hrSpecialist.delete(args);
  }
}
