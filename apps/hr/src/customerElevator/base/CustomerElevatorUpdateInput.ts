/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsDate,
} from "class-validator";
import { ElevatorWhereUniqueInput } from "../../elevator/base/ElevatorWhereUniqueInput";
import { Type } from "class-transformer";
import { FailureReportingUpdateManyWithoutCustomerElevatorsInput } from "./FailureReportingUpdateManyWithoutCustomerElevatorsInput";
import { InstallationContractUpdateManyWithoutCustomerElevatorsInput } from "./InstallationContractUpdateManyWithoutCustomerElevatorsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { PeriodicMaintenanceOrderUpdateManyWithoutCustomerElevatorsInput } from "./PeriodicMaintenanceOrderUpdateManyWithoutCustomerElevatorsInput";
import { StoreWhereUniqueInput } from "../../store/base/StoreWhereUniqueInput";

@InputType()
class CustomerElevatorUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  amount?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: () => ElevatorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ElevatorWhereUniqueInput)
  @IsOptional()
  @Field(() => ElevatorWhereUniqueInput, {
    nullable: true,
  })
  elevatorId?: ElevatorWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => FailureReportingUpdateManyWithoutCustomerElevatorsInput,
  })
  @ValidateNested()
  @Type(() => FailureReportingUpdateManyWithoutCustomerElevatorsInput)
  @IsOptional()
  @Field(() => FailureReportingUpdateManyWithoutCustomerElevatorsInput, {
    nullable: true,
  })
  failureReportings?: FailureReportingUpdateManyWithoutCustomerElevatorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hasPendingMaintenanceContractOrders?: string | null;

  @ApiProperty({
    required: false,
    type: () => InstallationContractUpdateManyWithoutCustomerElevatorsInput,
  })
  @ValidateNested()
  @Type(() => InstallationContractUpdateManyWithoutCustomerElevatorsInput)
  @IsOptional()
  @Field(() => InstallationContractUpdateManyWithoutCustomerElevatorsInput, {
    nullable: true,
  })
  installationContracts?: InstallationContractUpdateManyWithoutCustomerElevatorsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  maintenanceContractDocumentImage?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  maintenanceEndDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  maintenanceStartDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => PeriodicMaintenanceOrderUpdateManyWithoutCustomerElevatorsInput,
  })
  @ValidateNested()
  @Type(() => PeriodicMaintenanceOrderUpdateManyWithoutCustomerElevatorsInput)
  @IsOptional()
  @Field(
    () => PeriodicMaintenanceOrderUpdateManyWithoutCustomerElevatorsInput,
    {
      nullable: true,
    }
  )
  periodicMaintenanceOrders?: PeriodicMaintenanceOrderUpdateManyWithoutCustomerElevatorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => StoreWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StoreWhereUniqueInput)
  @IsOptional()
  @Field(() => StoreWhereUniqueInput, {
    nullable: true,
  })
  storeId?: StoreWhereUniqueInput;
}

export { CustomerElevatorUpdateInput as CustomerElevatorUpdateInput };
