/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ContractPeriod as PrismaContractPeriod,
  MaintenanceContract as PrismaMaintenanceContract,
} from "@prisma/client";

export class ContractPeriodServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContractPeriodCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contractPeriod.count(args);
  }

  async contractPeriods(
    args: Prisma.ContractPeriodFindManyArgs
  ): Promise<PrismaContractPeriod[]> {
    return this.prisma.contractPeriod.findMany(args);
  }
  async contractPeriod(
    args: Prisma.ContractPeriodFindUniqueArgs
  ): Promise<PrismaContractPeriod | null> {
    return this.prisma.contractPeriod.findUnique(args);
  }
  async createContractPeriod(
    args: Prisma.ContractPeriodCreateArgs
  ): Promise<PrismaContractPeriod> {
    return this.prisma.contractPeriod.create(args);
  }
  async updateContractPeriod(
    args: Prisma.ContractPeriodUpdateArgs
  ): Promise<PrismaContractPeriod> {
    return this.prisma.contractPeriod.update(args);
  }
  async deleteContractPeriod(
    args: Prisma.ContractPeriodDeleteArgs
  ): Promise<PrismaContractPeriod> {
    return this.prisma.contractPeriod.delete(args);
  }

  async findMaintenanceContracts(
    parentId: number,
    args: Prisma.MaintenanceContractFindManyArgs
  ): Promise<PrismaMaintenanceContract[]> {
    return this.prisma.contractPeriod
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .maintenanceContracts(args);
  }
}
