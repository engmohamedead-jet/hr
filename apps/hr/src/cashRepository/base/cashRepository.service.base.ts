/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CashRepository as PrismaCashRepository } from "@prisma/client";

export class CashRepositoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CashRepositoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cashRepository.count(args);
  }

  async cashRepositories(
    args: Prisma.CashRepositoryFindManyArgs
  ): Promise<PrismaCashRepository[]> {
    return this.prisma.cashRepository.findMany(args);
  }
  async cashRepository(
    args: Prisma.CashRepositoryFindUniqueArgs
  ): Promise<PrismaCashRepository | null> {
    return this.prisma.cashRepository.findUnique(args);
  }
  async createCashRepository(
    args: Prisma.CashRepositoryCreateArgs
  ): Promise<PrismaCashRepository> {
    return this.prisma.cashRepository.create(args);
  }
  async updateCashRepository(
    args: Prisma.CashRepositoryUpdateArgs
  ): Promise<PrismaCashRepository> {
    return this.prisma.cashRepository.update(args);
  }
  async deleteCashRepository(
    args: Prisma.CashRepositoryDeleteArgs
  ): Promise<PrismaCashRepository> {
    return this.prisma.cashRepository.delete(args);
  }

  async getCashRepositories(
    parentId: string
  ): Promise<PrismaCashRepository | null> {
    return this.prisma.cashRepository
      .findUnique({
        where: { id: parentId },
      })
      .cashRepositories();
  }

  async getParentCashRepositoryId(
    parentId: string
  ): Promise<PrismaCashRepository | null> {
    return this.prisma.cashRepository
      .findUnique({
        where: { id: parentId },
      })
      .parentCashRepositoryId();
  }
}
