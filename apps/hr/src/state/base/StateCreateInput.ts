/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BankCreateNestedManyWithoutStatesInput } from "./BankCreateNestedManyWithoutStatesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { CityCreateNestedManyWithoutStatesInput } from "./CityCreateNestedManyWithoutStatesInput";
import { CountryWhereUniqueInput } from "../../country/base/CountryWhereUniqueInput";

@InputType()
class StateCreateInput {
  @ApiProperty({
    required: false,
    type: () => BankCreateNestedManyWithoutStatesInput,
  })
  @ValidateNested()
  @Type(() => BankCreateNestedManyWithoutStatesInput)
  @IsOptional()
  @Field(() => BankCreateNestedManyWithoutStatesInput, {
    nullable: true,
  })
  banks?: BankCreateNestedManyWithoutStatesInput;

  @ApiProperty({
    required: false,
    type: () => CityCreateNestedManyWithoutStatesInput,
  })
  @ValidateNested()
  @Type(() => CityCreateNestedManyWithoutStatesInput)
  @IsOptional()
  @Field(() => CityCreateNestedManyWithoutStatesInput, {
    nullable: true,
  })
  cities?: CityCreateNestedManyWithoutStatesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  code!: string;

  @ApiProperty({
    required: true,
    type: () => CountryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CountryWhereUniqueInput)
  @Field(() => CountryWhereUniqueInput)
  countryId!: CountryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  normalizedName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;
}

export { StateCreateInput as StateCreateInput };
