/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ProductionOrder as PrismaProductionOrder,
  BillOfMaterial as PrismaBillOfMaterial,
  Customer as PrismaCustomer,
  OrderStatus as PrismaOrderStatus,
  Product as PrismaProduct,
  Store as PrismaStore,
  Tenant as PrismaTenant,
  Unit as PrismaUnit,
} from "@prisma/client";

export class ProductionOrderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductionOrderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productionOrder.count(args);
  }

  async productionOrders(
    args: Prisma.ProductionOrderFindManyArgs
  ): Promise<PrismaProductionOrder[]> {
    return this.prisma.productionOrder.findMany(args);
  }
  async productionOrder(
    args: Prisma.ProductionOrderFindUniqueArgs
  ): Promise<PrismaProductionOrder | null> {
    return this.prisma.productionOrder.findUnique(args);
  }
  async createProductionOrder(
    args: Prisma.ProductionOrderCreateArgs
  ): Promise<PrismaProductionOrder> {
    return this.prisma.productionOrder.create(args);
  }
  async updateProductionOrder(
    args: Prisma.ProductionOrderUpdateArgs
  ): Promise<PrismaProductionOrder> {
    return this.prisma.productionOrder.update(args);
  }
  async deleteProductionOrder(
    args: Prisma.ProductionOrderDeleteArgs
  ): Promise<PrismaProductionOrder> {
    return this.prisma.productionOrder.delete(args);
  }

  async getBillOfMaterialId(
    parentId: string
  ): Promise<PrismaBillOfMaterial | null> {
    return this.prisma.productionOrder
      .findUnique({
        where: { id: parentId },
      })
      .billOfMaterialId();
  }

  async getCustomerId(parentId: string): Promise<PrismaCustomer | null> {
    return this.prisma.productionOrder
      .findUnique({
        where: { id: parentId },
      })
      .customerId();
  }

  async getOrderStatusId(parentId: string): Promise<PrismaOrderStatus | null> {
    return this.prisma.productionOrder
      .findUnique({
        where: { id: parentId },
      })
      .orderStatusId();
  }

  async getProductId(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.productionOrder
      .findUnique({
        where: { id: parentId },
      })
      .productId();
  }

  async getStoreId(parentId: string): Promise<PrismaStore | null> {
    return this.prisma.productionOrder
      .findUnique({
        where: { id: parentId },
      })
      .storeId();
  }

  async getTenantId(parentId: string): Promise<PrismaTenant | null> {
    return this.prisma.productionOrder
      .findUnique({
        where: { id: parentId },
      })
      .tenantId();
  }

  async getUnit(parentId: string): Promise<PrismaUnit | null> {
    return this.prisma.productionOrder
      .findUnique({
        where: { id: parentId },
      })
      .unit();
  }
}
