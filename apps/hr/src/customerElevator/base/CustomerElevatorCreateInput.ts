/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsDate,
} from "class-validator";
import { ElevatorWhereUniqueInput } from "../../elevator/base/ElevatorWhereUniqueInput";
import { Type } from "class-transformer";
import { FailureReportingCreateNestedManyWithoutCustomerElevatorsInput } from "./FailureReportingCreateNestedManyWithoutCustomerElevatorsInput";
import { InstallationContractCreateNestedManyWithoutCustomerElevatorsInput } from "./InstallationContractCreateNestedManyWithoutCustomerElevatorsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { PeriodicMaintenanceOrderCreateNestedManyWithoutCustomerElevatorsInput } from "./PeriodicMaintenanceOrderCreateNestedManyWithoutCustomerElevatorsInput";
import { StoreWhereUniqueInput } from "../../store/base/StoreWhereUniqueInput";

@InputType()
class CustomerElevatorCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  amount?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: true,
    type: () => ElevatorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ElevatorWhereUniqueInput)
  @Field(() => ElevatorWhereUniqueInput)
  elevatorId!: ElevatorWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => FailureReportingCreateNestedManyWithoutCustomerElevatorsInput,
  })
  @ValidateNested()
  @Type(() => FailureReportingCreateNestedManyWithoutCustomerElevatorsInput)
  @IsOptional()
  @Field(() => FailureReportingCreateNestedManyWithoutCustomerElevatorsInput, {
    nullable: true,
  })
  failureReportings?: FailureReportingCreateNestedManyWithoutCustomerElevatorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hasPendingMaintenanceContractOrders?: string | null;

  @ApiProperty({
    required: false,
    type: () =>
      InstallationContractCreateNestedManyWithoutCustomerElevatorsInput,
  })
  @ValidateNested()
  @Type(() => InstallationContractCreateNestedManyWithoutCustomerElevatorsInput)
  @IsOptional()
  @Field(
    () => InstallationContractCreateNestedManyWithoutCustomerElevatorsInput,
    {
      nullable: true,
    }
  )
  installationContracts?: InstallationContractCreateNestedManyWithoutCustomerElevatorsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  maintenanceContractDocumentImage?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  maintenanceEndDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  maintenanceStartDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () =>
      PeriodicMaintenanceOrderCreateNestedManyWithoutCustomerElevatorsInput,
  })
  @ValidateNested()
  @Type(
    () => PeriodicMaintenanceOrderCreateNestedManyWithoutCustomerElevatorsInput
  )
  @IsOptional()
  @Field(
    () => PeriodicMaintenanceOrderCreateNestedManyWithoutCustomerElevatorsInput,
    {
      nullable: true,
    }
  )
  periodicMaintenanceOrders?: PeriodicMaintenanceOrderCreateNestedManyWithoutCustomerElevatorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: true,
    type: () => StoreWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StoreWhereUniqueInput)
  @Field(() => StoreWhereUniqueInput)
  storeId!: StoreWhereUniqueInput;
}

export { CustomerElevatorCreateInput as CustomerElevatorCreateInput };
