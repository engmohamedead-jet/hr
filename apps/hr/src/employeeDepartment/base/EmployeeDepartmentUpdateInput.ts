/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { EmployeeDepartmentUpdateManyWithoutEmployeeDepartmentsInput } from "./EmployeeDepartmentUpdateManyWithoutEmployeeDepartmentsInput";
import { Type } from "class-transformer";
import { EmployeeUpdateManyWithoutEmployeeDepartmentsInput } from "./EmployeeUpdateManyWithoutEmployeeDepartmentsInput";
import { EmployeeDepartmentWhereUniqueInput } from "./EmployeeDepartmentWhereUniqueInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class EmployeeDepartmentUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeDepartmentUpdateManyWithoutEmployeeDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDepartmentUpdateManyWithoutEmployeeDepartmentsInput)
  @IsOptional()
  @Field(() => EmployeeDepartmentUpdateManyWithoutEmployeeDepartmentsInput, {
    nullable: true,
  })
  employeeDepartments?: EmployeeDepartmentUpdateManyWithoutEmployeeDepartmentsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpdateManyWithoutEmployeeDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpdateManyWithoutEmployeeDepartmentsInput)
  @IsOptional()
  @Field(() => EmployeeUpdateManyWithoutEmployeeDepartmentsInput, {
    nullable: true,
  })
  employees?: EmployeeUpdateManyWithoutEmployeeDepartmentsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeDepartmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EmployeeDepartmentWhereUniqueInput)
  @IsOptional()
  @Field(() => EmployeeDepartmentWhereUniqueInput, {
    nullable: true,
  })
  parentEmployeeDepartmentId?: EmployeeDepartmentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;
}

export { EmployeeDepartmentUpdateInput as EmployeeDepartmentUpdateInput };
