/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { PaymentVoucherUpdateManyWithoutVoucherTypesInput } from "./PaymentVoucherUpdateManyWithoutVoucherTypesInput";
import { Type } from "class-transformer";
import { ReceiptVoucherUpdateManyWithoutVoucherTypesInput } from "./ReceiptVoucherUpdateManyWithoutVoucherTypesInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class VoucherTypeUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: () => PaymentVoucherUpdateManyWithoutVoucherTypesInput,
  })
  @ValidateNested()
  @Type(() => PaymentVoucherUpdateManyWithoutVoucherTypesInput)
  @IsOptional()
  @Field(() => PaymentVoucherUpdateManyWithoutVoucherTypesInput, {
    nullable: true,
  })
  paymentVouchers?: PaymentVoucherUpdateManyWithoutVoucherTypesInput;

  @ApiProperty({
    required: false,
    type: () => ReceiptVoucherUpdateManyWithoutVoucherTypesInput,
  })
  @ValidateNested()
  @Type(() => ReceiptVoucherUpdateManyWithoutVoucherTypesInput)
  @IsOptional()
  @Field(() => ReceiptVoucherUpdateManyWithoutVoucherTypesInput, {
    nullable: true,
  })
  receiptVouchers?: ReceiptVoucherUpdateManyWithoutVoucherTypesInput;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;
}

export { VoucherTypeUpdateInput as VoucherTypeUpdateInput };
