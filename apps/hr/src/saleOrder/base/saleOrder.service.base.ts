/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  SaleOrder as PrismaSaleOrder,
  Customer as PrismaCustomer,
  SaleQuotation as PrismaSaleQuotation,
} from "@prisma/client";

export class SaleOrderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SaleOrderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.saleOrder.count(args);
  }

  async saleOrders(
    args: Prisma.SaleOrderFindManyArgs
  ): Promise<PrismaSaleOrder[]> {
    return this.prisma.saleOrder.findMany(args);
  }
  async saleOrder(
    args: Prisma.SaleOrderFindUniqueArgs
  ): Promise<PrismaSaleOrder | null> {
    return this.prisma.saleOrder.findUnique(args);
  }
  async createSaleOrder(
    args: Prisma.SaleOrderCreateArgs
  ): Promise<PrismaSaleOrder> {
    return this.prisma.saleOrder.create(args);
  }
  async updateSaleOrder(
    args: Prisma.SaleOrderUpdateArgs
  ): Promise<PrismaSaleOrder> {
    return this.prisma.saleOrder.update(args);
  }
  async deleteSaleOrder(
    args: Prisma.SaleOrderDeleteArgs
  ): Promise<PrismaSaleOrder> {
    return this.prisma.saleOrder.delete(args);
  }

  async getCustomerId(parentId: string): Promise<PrismaCustomer | null> {
    return this.prisma.saleOrder
      .findUnique({
        where: { id: parentId },
      })
      .customerId();
  }

  async getSaleQuotation(
    parentId: string
  ): Promise<PrismaSaleQuotation | null> {
    return this.prisma.saleOrder
      .findUnique({
        where: { id: parentId },
      })
      .saleQuotation();
  }
}
