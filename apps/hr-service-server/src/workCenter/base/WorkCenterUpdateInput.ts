/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Max,
  IsNumber,
  IsBoolean,
  Min,
  ValidateNested,
} from "class-validator";

import { Decimal } from "decimal.js";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";
import { Type } from "class-transformer";
import { WorkCenterAlternativeUpdateManyWithoutWorkCentersInput } from "./WorkCenterAlternativeUpdateManyWithoutWorkCentersInput";
import { WorkCenterCapacityUpdateManyWithoutWorkCentersInput } from "./WorkCenterCapacityUpdateManyWithoutWorkCentersInput";
import { WorkCenterProductivityUpdateManyWithoutWorkCentersInput } from "./WorkCenterProductivityUpdateManyWithoutWorkCentersInput";
import { WorkCenterProductivityLossUpdateManyWithoutWorkCentersInput } from "./WorkCenterProductivityLossUpdateManyWithoutWorkCentersInput";
import { WorkCenterRoutingUpdateManyWithoutWorkCentersInput } from "./WorkCenterRoutingUpdateManyWithoutWorkCentersInput";
import { WorkCenterWorkCenterTagUpdateManyWithoutWorkCentersInput } from "./WorkCenterWorkCenterTagUpdateManyWithoutWorkCentersInput";

@InputType()
class WorkCenterUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  analyticDistribution?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  color?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  costPerHour?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  defaultCapacity?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isProductive?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  normalizedName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  oeeTareget?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(1)
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  sequence?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  startTime?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  stopTime?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  timeEfficiency?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => WorkCenterAlternativeUpdateManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterAlternativeUpdateManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterAlternativeUpdateManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterAlternativeWorkCenters?: WorkCenterAlternativeUpdateManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterAlternativeUpdateManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterAlternativeUpdateManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterAlternativeUpdateManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterAlternatives?: WorkCenterAlternativeUpdateManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterCapacityUpdateManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterCapacityUpdateManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterCapacityUpdateManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterCapacities?: WorkCenterCapacityUpdateManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterProductivityUpdateManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityUpdateManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterProductivityUpdateManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterProductivities?: WorkCenterProductivityUpdateManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterProductivityLossUpdateManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterProductivityLossUpdateManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterProductivityLossUpdateManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterProductivityLosses?: WorkCenterProductivityLossUpdateManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterRoutingUpdateManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterRoutingUpdateManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterRoutingUpdateManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterRoutings?: WorkCenterRoutingUpdateManyWithoutWorkCentersInput;

  @ApiProperty({
    required: false,
    type: () => WorkCenterWorkCenterTagUpdateManyWithoutWorkCentersInput,
  })
  @ValidateNested()
  @Type(() => WorkCenterWorkCenterTagUpdateManyWithoutWorkCentersInput)
  @IsOptional()
  @Field(() => WorkCenterWorkCenterTagUpdateManyWithoutWorkCentersInput, {
    nullable: true,
  })
  workCenterWorkCenterTags?: WorkCenterWorkCenterTagUpdateManyWithoutWorkCentersInput;
}

export { WorkCenterUpdateInput as WorkCenterUpdateInput };
