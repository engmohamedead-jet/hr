/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  SalaryItemGroup as PrismaSalaryItemGroup,
  SalaryItem as PrismaSalaryItem,
  Tenant as PrismaTenant,
} from "@prisma/client";

export class SalaryItemGroupServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalaryItemGroupCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salaryItemGroup.count(args);
  }

  async salaryItemGroups(
    args: Prisma.SalaryItemGroupFindManyArgs
  ): Promise<PrismaSalaryItemGroup[]> {
    return this.prisma.salaryItemGroup.findMany(args);
  }
  async salaryItemGroup(
    args: Prisma.SalaryItemGroupFindUniqueArgs
  ): Promise<PrismaSalaryItemGroup | null> {
    return this.prisma.salaryItemGroup.findUnique(args);
  }
  async createSalaryItemGroup(
    args: Prisma.SalaryItemGroupCreateArgs
  ): Promise<PrismaSalaryItemGroup> {
    return this.prisma.salaryItemGroup.create(args);
  }
  async updateSalaryItemGroup(
    args: Prisma.SalaryItemGroupUpdateArgs
  ): Promise<PrismaSalaryItemGroup> {
    return this.prisma.salaryItemGroup.update(args);
  }
  async deleteSalaryItemGroup(
    args: Prisma.SalaryItemGroupDeleteArgs
  ): Promise<PrismaSalaryItemGroup> {
    return this.prisma.salaryItemGroup.delete(args);
  }

  async findSalaryItems(
    parentId: number,
    args: Prisma.SalaryItemFindManyArgs
  ): Promise<PrismaSalaryItem[]> {
    return this.prisma.salaryItemGroup
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .salaryItems(args);
  }

  async getTenantId(parentId: number): Promise<PrismaTenant | null> {
    return this.prisma.salaryItemGroup
      .findUnique({
        where: { id: parentId },
      })
      .tenantId();
  }
}
