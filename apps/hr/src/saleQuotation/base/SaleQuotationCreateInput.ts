/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsNumber,
  Max,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  IsBoolean,
  ValidateNested,
} from "class-validator";

import { Decimal } from "decimal.js";
import { Type } from "class-transformer";
import { SaleOrderCreateNestedManyWithoutSaleQuotationsInput } from "./SaleOrderCreateNestedManyWithoutSaleQuotationsInput";
import { SaleQuotationDetailCreateNestedManyWithoutSaleQuotationsInput } from "./SaleQuotationDetailCreateNestedManyWithoutSaleQuotationsInput";
import { TenantWhereUniqueInput } from "../../tenant/base/TenantWhereUniqueInput";

@InputType()
class SaleQuotationCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  discount?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(100)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  discountRate?: Decimal | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  expectedDeliveryDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  internalMemo?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isActive!: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isCancelled?: boolean | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Float)
  nonTaxableTotal!: Decimal;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  referenceNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => SaleOrderCreateNestedManyWithoutSaleQuotationsInput,
  })
  @ValidateNested()
  @Type(() => SaleOrderCreateNestedManyWithoutSaleQuotationsInput)
  @IsOptional()
  @Field(() => SaleOrderCreateNestedManyWithoutSaleQuotationsInput, {
    nullable: true,
  })
  saleOrders?: SaleOrderCreateNestedManyWithoutSaleQuotationsInput;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  saleQuotationDate!: Date;

  @ApiProperty({
    required: false,
    type: () => SaleQuotationDetailCreateNestedManyWithoutSaleQuotationsInput,
  })
  @ValidateNested()
  @Type(() => SaleQuotationDetailCreateNestedManyWithoutSaleQuotationsInput)
  @IsOptional()
  @Field(() => SaleQuotationDetailCreateNestedManyWithoutSaleQuotationsInput, {
    nullable: true,
  })
  saleQuotationDetails?: SaleQuotationDetailCreateNestedManyWithoutSaleQuotationsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  sequenceNumber!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(1000)
  @Field(() => Float)
  taxRate!: Decimal;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Float)
  taxTotal!: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  taxableTotal?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => TenantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TenantWhereUniqueInput)
  @IsOptional()
  @Field(() => TenantWhereUniqueInput, {
    nullable: true,
  })
  tenantId?: TenantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  terms?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  transactionDateTime?: Date | null;
}

export { SaleQuotationCreateInput as SaleQuotationCreateInput };
