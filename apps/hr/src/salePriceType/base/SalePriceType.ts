/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsInt,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { SaleDetail } from "../../saleDetail/base/SaleDetail";
import { SaleQuotationDetail } from "../../saleQuotationDetail/base/SaleQuotationDetail";
import { SaleReturnDetail } from "../../saleReturnDetail/base/SaleReturnDetail";
import { SaleReturn } from "../../saleReturn/base/SaleReturn";
import { Sale } from "../../sale/base/Sale";
import { Tenant } from "../../tenant/base/Tenant";

@ObjectType()
class SalePriceType {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isActive!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  normalizedName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note!: string | null;

  @ApiProperty({
    required: false,
    type: () => SaleDetail,
  })
  @ValidateNested()
  @Type(() => SaleDetail)
  @IsOptional()
  saleDetails?: SaleDetail | null;

  @ApiProperty({
    required: false,
    type: () => SaleQuotationDetail,
  })
  @ValidateNested()
  @Type(() => SaleQuotationDetail)
  @IsOptional()
  saleQuotationDetails?: SaleQuotationDetail | null;

  @ApiProperty({
    required: false,
    type: () => SaleReturnDetail,
  })
  @ValidateNested()
  @Type(() => SaleReturnDetail)
  @IsOptional()
  saleReturnDetails?: SaleReturnDetail | null;

  @ApiProperty({
    required: false,
    type: () => SaleReturn,
  })
  @ValidateNested()
  @Type(() => SaleReturn)
  @IsOptional()
  saleReturns?: SaleReturn | null;

  @ApiProperty({
    required: false,
    type: () => Sale,
  })
  @ValidateNested()
  @Type(() => Sale)
  @IsOptional()
  sales?: Sale | null;

  @ApiProperty({
    required: false,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenantId?: Tenant | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { SalePriceType as SalePriceType };
